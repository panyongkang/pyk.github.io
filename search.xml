<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在线获取随机图片的API收集</title>
      <link href="/2019/09/26/00036/"/>
      <url>/2019/09/26/00036/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="在线API列表"><a href="#在线API列表" class="headerlink" title="在线API列表"></a>在线API列表</h2><h3 id="返回Bing的随机图片"><a href="#返回Bing的随机图片" class="headerlink" title="返回Bing的随机图片"></a>返回Bing的随机图片</h3><p><a href="https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture" target="_blank" rel="noopener">https://uploadbeta.com/api/pictures/random/?key=BingEverydayWallpaperPicture</a></p><p><a href="https://uploadbeta.com/api/pictures/random/?key=推女郎" target="_blank" rel="noopener">https://uploadbeta.com/api/pictures/random/?key=%E6%8E%A8%E5%A5%B3%E9%83%8E</a></p><p>速度: ★★★★★</p><h3 id="返回随机图片"><a href="#返回随机图片" class="headerlink" title="返回随机图片"></a>返回随机图片</h3><p><a href="http://lorempixel.com/1600/900" target="_blank" rel="noopener">http://lorempixel.com/1600/900</a></p><p>速度: ★★★★★</p><p>需指定分辨率, 如果指定的分辨率没有找到图片则返回空页面</p><h3 id="来自github的项目"><a href="#来自github的项目" class="headerlink" title="来自github的项目"></a>来自github的项目</h3><p><a href="https://github.com/xCss/bing" target="_blank" rel="noopener">https://github.com/xCss/bing</a></p><p>速度: ★★★</p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo如何添加QQ在线聊天链接</title>
      <link href="/2019/09/26/00035/"/>
      <url>/2019/09/26/00035/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>这里我们添加一下网页QQ咨询窗口，添加也是非常简单。这里记录下教程。</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>1.我们直接使用链接即可，直接复制代码然后将QQ号替换即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://wpa.qq.com/msgrd?v=3&amp;uin=1330561079&amp;site=qq&amp;menu=yes</span><br></pre></td></tr></table></figure><p>2.直接复制到浏览器中访问，会提示下面的问题</p><p>“QQ在线状态”服务尚未启用,您需要添加对方为好友后才能与其进行会话。</p><h2 id="开启QQ在线状态"><a href="#开启QQ在线状态" class="headerlink" title="开启QQ在线状态"></a>开启QQ在线状态</h2><p>1.直接点击此界面链接</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190926202219.png" class="lozad"></p><p>2.点击推广工具</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190926202324.png" class="lozad"></p><p>3.然后点击立即免费开通服务就好了，进入到下面的界面可以复制其代码生成图片</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190926202454.png" class="lozad"></p><h2 id="hexo添加"><a href="#hexo添加" class="headerlink" title="hexo添加"></a>hexo添加</h2><p>我们这里添加也是非常的简单，直接使用图标fa-qq,点击跳入链接即可</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190926202805.png" class="lozad"></p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加公益界面</title>
      <link href="/2019/09/26/00034/"/>
      <url>/2019/09/26/00034/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>我们这里想使用404公益界面来充当网站不能访问的界面，也算是为寻找孩子贡献自己的力量了。我这里使用的是腾讯的404公益界面，添加起来也很是方便。</p><h2 id="什么是404"><a href="#什么是404" class="headerlink" title="什么是404"></a>什么是404</h2><p>HTTP 404或Not Found错误信息是HTTP的其中一种“标准回应信息”（HTTP状态码），此信息代表客户端在浏览网页时，服务器无法正常提供信息，或是服务器无法回应且不知原因。</p><h2 id="添加腾讯404界面"><a href="#添加腾讯404界面" class="headerlink" title="添加腾讯404界面"></a>添加腾讯404界面</h2><p>1.进入Hexo启动Git Bash，进入 Hexo 所在文件夹，输入 <code>hexo new page 404</code> ;</p><p>2.打开刚新建的页面文件，默认在 Hexo 文件夹根目录下 /source/404/index.md；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;404&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;   src=&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>3.部署发布即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>4.部署之后在我的博客界面打开不存在的界面,可以发现已经存在，可以访问我的网站试一下</p><p><a href="https://liuxiangyang.space/123" target="_blank" rel="noopener">https://liuxiangyang.space/123</a></p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190926175650.png" class="lozad"></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>1.上面的做法可能会出现只有访问域名+404才会出现的情况，所以我们的解决办法是</p><p>将在 根目录下 /source/404/index.md文件替换成404.html(也就是说不采用上面的方法，由于Hexo托管于github，只需要在xxx.github.io下面新建一个404页面即可。）代码采用下面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 404 Not Found：该页无法显示</span><br><span class="line">toc: false</span><br><span class="line">comments: false</span><br><span class="line">permalink: /404</span><br><span class="line">---</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">         &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">         &lt;title&gt;404&lt;/title&gt;                                                                                                                                        </span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">         &lt;script type=&quot;text/javascript&quot; src=&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot; homePageName=&quot;返回首页&quot; homePageUrl=&quot;https://liuxiangyang.space/&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>在此目录界面下放入404.html，当然了你也可以自己自定义你的界面！</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190926181354.png" class="lozad"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法介绍</title>
      <link href="/2019/09/25/00033/"/>
      <url>/2019/09/25/00033/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="htmledit_views" id="content_views">                                            <h2><a name="t0"></a>一、什么是 Markdown</h2><p>&nbsp;&nbsp;&nbsp;Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><h2><a name="t3"></a>二、语法介绍</h2><p><span style="color:#ff0000;">注意：很多需要效果展示的地方，参考配图中的红色区域。</span></p><p>1. 标题</p><p>第一种是使用 <code>#</code> 表示标题，其中 <code>#</code> 号必须在行首，<br>第二种是使用 <code>===</code> 或者 <code>---</code> 表示。</p><p><img alt class="has lozad" data-src="https://img-blog.csdn.net/20180617104727399?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FmZWlfXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p>2. 分割线</p><p>使用三个或以上的 <code>-</code> 或者 <code>*</code> 表示，且这一行只有符号，<strong>注意不要被识别为二级标题即可</strong>，例如中间或者前面可以加空格。</p><p>3. 斜体和粗体</p><p>使用 <code>*</code> 和 <code>**</code> 分别表示斜体和粗体，删除线使用两个 <code>~</code> 表示</p><p><img alt class="has lozad" data-src="https://img-blog.csdn.net/20180617104742331?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FmZWlfXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p>4. 超链接和图片</p><p>链接和图片的写法类似，图片仅在超链接前多了一个 <code>!</code> ，一般是 [文字描述] (链接)</p><p>5. 无序列表</p><p>使用 <code>-</code>、<code>+</code> 和 <code>*</code> 表示无序列表，前后留一行空白，可嵌套，例如</p><p><img alt class="has lozad" data-src="https://img-blog.csdn.net/20180617104812563?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FmZWlfXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p>6. 有序列表</p><p>使用 <code>1.</code> （点号后面有个空格）表示有序列表，可嵌套。</p><p>7. 文字引用</p><p>使用 <code>&gt;</code> 表示，可以有多个 <code>&gt;</code>，表示层级更深，例如</p><p><img alt class="has lozad" data-src="https://img-blog.csdn.net/20180617105056177?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FmZWlfXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p>8. 行内代码块</p><p>其实上面已经用过很多次了，即使用 ` 表示，例如</p><p>扩展：很多字符是需要转义，使用反斜杠 <code>\</code> 进行转义</p><p>9. 代码块</p><p>使用四个空格缩进表示代码块，一些 IDE 支持行数提示和着色，一般使用三个 ` 表示，例如</p><p><img alt class="has lozad" data-src="https://img-blog.csdn.net/20180617105120413?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FmZWlfXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p>10. 表格</p><p>直接看例子吧，第二行的 <code>---:</code> 表示了对齐方式，默认<strong>左对齐</strong>，还有&nbsp;<strong>右对齐&nbsp;</strong>和&nbsp;<strong>居中</strong></p><p>|商品|数量|单价|<br>|-|-------:|:------:|<br>|苹果|10|\$1|<br>|电脑|1|\$1000|</p><p><strong><img alt class="has lozad" data-src="https://img-blog.csdn.net/20180617105147160?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FmZWlfXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></strong></p><p>11. 流程图</p><p>主要的语法为 <code>name=&gt;type: describe</code>，其中 type 主要有以下几种：<br>1.开始和结束：<code>start</code> <code>end</code><br>2.输入输出：<code>inputoutput</code><br>3.操作：<code>operation</code><br>4.条件：<code>condition</code><br>5.子程序：<code>subroutine</code></p><p><img alt class="has lozad" data-src="https://img-blog.csdn.net/20180617105213264?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FmZWlfXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p>更多语法参考：<a href="http://adrai.github.io/flowchart.js/" rel="noopener" data-token="5f21ee8465ea32557c74170e0f8bede8" target="_blank">流程图语法参考</a></p><p>&nbsp;</p><p>12. 数学公式</p><p>使用 <code>$</code> 表示，其中一个 $ 表示在行内，两个 $ 表示独占一行。</p><p>eg : $\sum_{i=1}^n a_i=0$</p><p>支持 <strong>LaTeX </strong>编辑显示支持，访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" rel="noopener" data-token="3c54c104f371a38bb3c9013924d318ff" target="_blank">MathJax </a>参考更多使用方法。</p><p>推荐一个常用的数学公式在线编译网站：<a href="https://www.codecogs.com/latex/eqneditor.php" rel="noopener" data-token="f74524e705bab124002c747fbcebc3c6" target="_blank">https://www.codecogs.com/latex/eqneditor.php</a></p><p>13.支持 HTML 标签</p><p>例如想要段落的缩进，可以如下：</p><p>&amp;nbsp;&amp;nbsp;不断行的空白格&amp;nbsp;或&amp;#160;<br>&amp;ensp;&amp;ensp;半方大的空白&amp;ensp;或&amp;#8194;<br>&amp;emsp;&amp;emsp;全方大的空白&amp;emsp;或&amp;#8195;</p><p><img alt class="has lozad" data-src="https://img-blog.csdn.net/20180617105447754?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FmZWlfXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p>点我跳转的功能这里演示不了，写法如下：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&lt;h6 id='anchor'&gt;我是一个锚点&lt;/h6&gt;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;[点我跳转](#anchor)</p><p>&nbsp;</p></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo之如何添加自定义界面和主题渲染界面</title>
      <link href="/2019/09/24/00029/"/>
      <url>/2019/09/24/00029/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>hexo搭建静态博客前面的教程我们已经安排了，安装完成之后相信大家都会有一个问题就是在主题之外要如何添加自定义页面？例如添加「照片墙」或「作品集」，这分两种情况：</p><ul><li>主题内渲染，添加的模块仍在主题内，主题头部信息依然存在，仅仅是在特定区域进行渲染（适合添加 about 页面）</li><li>完全页面渲染，在主题内点击对应链接跳转到一个完全崭新的页面<br>hexo 的执行逻辑<br>source 文件夹下存放了待被转化的 markdown 文件，在执行hexo g命令时，source 目录下的文件将被转化为 html 文件。</li></ul><h2 id="主题内渲染"><a href="#主题内渲染" class="headerlink" title="主题内渲染"></a>主题内渲染</h2><p>以添加「照片墙」模块为例：<br>主题配置文件butterfly.yml中添加对应的menu项，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line"></span><br><span class="line">  首页: /||fa fa-home</span><br><span class="line">  时间轴: /archives/||fa fa-archive</span><br><span class="line">  标签: /tags/||fa fa-tags</span><br><span class="line">  分类: /categories/||fa fa-folder-open</span><br><span class="line">  音乐: /music/|| fa fa-music</span><br><span class="line">  留言板: /message/||fa fa-comment</span><br><span class="line">  相册: /gallery/||fa fa-photo</span><br><span class="line">  友链: /link/||fa fa-link</span><br><span class="line">  关于: /about/||fa fa-user-circle-o</span><br></pre></td></tr></table></figure><h3 id="例如我们创建分类页"><a href="#例如我们创建分类页" class="headerlink" title="例如我们创建分类页"></a>例如我们创建分类页</h3><p>1.前往你的Hexo博客的根目录</p><p>2.输入hexo new page categories，这个的名称和上面的要一致</p><p>3.你会找到source/categories/index.md这个文件</p><p>4.修改这个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: </span><br><span class="line">date: 2019-09-24 20:57:12</span><br><span class="line">categories:</span><br><span class="line"> - Hexo</span><br><span class="line">tags:</span><br><span class="line"> - blog</span><br><span class="line">layout: false #关闭渲染</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="完全界面-自定义界面"><a href="#完全界面-自定义界面" class="headerlink" title="完全界面(自定义界面)"></a>完全界面(自定义界面)</h2><p>下面介绍两种方法。</p><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><p>第一种方法是使用Hexo提供的跳过渲染配置，适用于整个目录的设置。具体步骤，打开博客根目录<code>_config.yml</code>，找到其中<code>skip_render</code>项，这个项目用来配置<code>/source/</code>中需要跳过渲染的文件或目录，例如希望跳过<code>/source/projects/</code>里的所有文件渲染，可以配置为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: projects/**</span><br></pre></td></tr></table></figure><p>匹配规则是一种类似正则的规则，官方给出的参考是<a href="https://github.com/isaacs/minimatch" target="_blank" rel="noopener">这个</a>。另外在测试这个功能的时候发现，Hexo的内部缓存不是特别好用，有时候你修改了配置但生成出来的内容不一定及时应用了新配置，最好在生成之前执行一下<code>hexo clean</code>命令，清除掉旧的生成文件和缓存。</p><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><p>第二种方法是给单个文件添加不应用模板的标记，适用于个别特殊文件的处理。例如我们的网站如果要使用百度统计，往往需要在根目录放一个html格式的验证文件，这个文件默认也会经过用主题模板渲染，避免渲染的办法就是在文件头部添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>这样，这个文件就不会经过模板渲染，最终发布到<code>/public/</code>里的文件就是去掉标记后的文件的样子。</p><h3 id="我们的效果图"><a href="#我们的效果图" class="headerlink" title="我们的效果图"></a>我们的效果图</h3><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190924205917.png" class="lozad"></p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190924204935.png" class="lozad"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们这里的主题是Butteryfly，我这里使用的自定义的方式是将文件删掉</p><p>例如我们这个想将关于页面做成自己的简历页面，进入source的文件about，将index.md删掉</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190924204506.png" class="lozad"></p><p>然后进入你的网站文件夹</p><p>在public文件夹下创建一个about文件夹；</p><p>2.把自己网页的所有资源文件都复制到about里面；</p><p>所以这里大家也就理解了，public是我们的网站文件夹，将自定义的网站文件放入其中即可，然后路径就是/about(文件的名称)</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客优化之使用jsDelivr</title>
      <link href="/2019/09/22/00006/"/>
      <url>/2019/09/22/00006/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><p>我们博客已经基本搭建完成，后面就是想优化下博客给博客加下速度，使得用户访问更快。下面我们使用jsDelivr来给博客的图片先加下速。我们的图床是使用Github+Picgo的，所以这里融入jsDelivr来给图片加速。</p><blockquote><p>Jsdelivr 网站是一个致力于为开发者提供数千种Javascript、CSS等超过1650多种 Libraries 加速的免费CDN服务，该平台是首个「打通中国大陆与海外的免费CDN服务」，网页开发者无须担心中国防火墙问题而影响使用。 </p><p>jsDelivr 平台将服务重心放在更快速的网路连线，利用CDN技术来确保每个地区的使用者都能获得最好的连接速度。此外jsDelivr 可将不同的JavaScript 或CSS libraries 整合在一起，通过一段链结来载入网站，非常方便!如果你正在寻找类似服务，jsDelivr 是个不错的选择。 </p></blockquote><h3 id="jsDelivr"><a href="#jsDelivr" class="headerlink" title="jsDelivr"></a>jsDelivr</h3><p>官网GitHub的配置地址：<a href="https://www.jsdelivr.com/?docs=gh" target="_blank" rel="noopener">https://www.jsdelivr.com/?docs=gh</a>    </p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190922165631.png" class="lozad"></p><p>复制得到：<a href="https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js</a><br>gh：代表GitHub（不用改）<br>jquery：改为你的GitHub用户名<br><a href="mailto:jquery@3.2.1" target="_blank" rel="noopener">jquery@3.2.1</a>：改为GitHub仓库名或者仓库发布版本号<br>dist：改为该仓库下的文件夹（可没有，也可多级目录）<br>jquery.min.js：改为该文件夹下需加速的文件（可为图片、js文件等等）</p><p><a href="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/Liuxiangyang-Git.github.io/cloudimg/img-2/1.jpg" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/Liuxiangyang-Git.github.io/cloudimg/img-2/1.jpg</a></p><h3 id="Picgo配置"><a href="#Picgo配置" class="headerlink" title="Picgo配置"></a>Picgo配置</h3><p>这里我们的Picgo已经配置好了，这个jsDelivr使用起来比较简单，直接使用它们的地址去配置，方法如下</p><p>我们只需要将设定自定义域名修改成此插件就好了，它的作用是，在图片上传后，PicGo会按照【自定义域名+上传的图片名】的方式生成访问链接，放到粘贴板上，因为我们要使用jsDelivr加速访问，所以复制上面写好的<a href="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/Liuxiangyang-Git.github.io/cloudimg也可以直接写" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/Liuxiangyang-Git.github.io/cloudimg也可以直接写</a></p><p><a href="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg。然后就可以使用了，这个时候你就会发现图片显示的很快了。" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg。然后就可以使用了，这个时候你就会发现图片显示的很快了。</a></p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190922164918.png" class="lozad"></p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> jsDelivr </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>问题解决-Valine评论系统报错Code403</title>
      <link href="/2019/09/22/00001/"/>
      <url>/2019/09/22/00001/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>我的博客系统的评论模块展示无问题，但是下面却出现了一行代码错误Code 403</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190922161648.png" class="lozad"></p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>此项问题的中文翻译为Code 403: 访问被api域名白名单拒绝，请检查你的安全域名设置。想了一想，我的博客系统是在更改自己域名之后出现此问题的，应该和域名的信任设置有关。</p><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>翻了翻前面的添加Valine的教程，发现有一项为设置Web安全域名，将我们新申请的域名写入</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190922162710.png" class="lozad"></p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客网站加速</title>
      <link href="/2019/09/20/00011/"/>
      <url>/2019/09/20/00011/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>Github+hexo搭建的博客也运行了一段时间，慢慢的发现了一个硬伤，就是其访问速度超慢超慢的，</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190919110555.png" class="lozad"></p><p>这个是我随机ping的，效果还不如之前，中间还是请求超时。难受呀。</p><p>原因不必多说就是因为Github是国外网站，访问起来慢也是正常的，毕竟咱们没有还钱，用的人家的服务器存储内容。所以心态放平，想一想现行有哪些办法可以解决这个问题。那么既然是要给网站加速了，现在通用的技术解决方案肯定是CDN了。这里简单介绍下CDN哦。</p><p>CDN(Content Delivery Network)内容发布网络，基本思路就是将你网站放置在各地节点服务器，用户访问时找最近的节点服务器获取数据，达到加速的目的。</p><h2 id="使用CDN加速"><a href="#使用CDN加速" class="headerlink" title="使用CDN加速"></a>使用CDN加速</h2><h3 id="CDN加速比较"><a href="#CDN加速比较" class="headerlink" title="CDN加速比较"></a>CDN加速比较</h3><div class="table-box"><table><thead><tr><th align="center">资费介绍页面</th><th align="center">免费额度</th><th align="center">是否支持HTTPS</th><th align="center">额外限制</th><th align="center">注册邀请链接</th></tr></thead><tbody><tr><td align="center"><a href="https://www.qiniu.com/prices?source=fusion" rel="noopener" data-token="577250dbb2ec4b18a67a4976bd99772a" target="_blank">七牛云</a></td><td align="center">10GB/月</td><td align="center">按量付费支持</td><td align="center">七牛云的免费额度是【CDN-HTTP】，也就是你的博客使用HTTPS协议的话是享受不到这个免费额度的，</td><td align="center"><a href="https://portal.qiniu.com/signup?code=3liwfwr7z4eoi" rel="noopener" data-token="ae75f59fb352ae8142ae72175ff05183" target="_blank">&gt;&gt;&gt; 点击注册</a></td></tr><tr><td align="center"><a href="https://buy.cloud.tencent.com/price/cdn/overview" rel="noopener" data-token="4f6ceca5efc30329a3d27110384f936d" target="_blank">腾讯云</a></td><td align="center">10GB/月</td><td align="center">免费支持</td><td align="center">加了腾讯云CDN没有感觉多大加速</td><td align="center">/</td></tr><tr><td align="center"><a href="https://su.baidu.com/plan.html#compare" rel="noopener" data-token="48c65c6311c2e8f2fb0c5551fe53cd90" target="_blank">百度云</a></td><td align="center">10GB/天</td><td align="center">年费付费支持</td><td align="center">巨贵…</td><td align="center">/</td></tr><tr><td align="center"><a href="https://www.upyun.com/league" rel="noopener" data-token="7d9f1242ca930a3890526425f507c92f" target="_blank">又拍云</a></td><td align="center">15GB/月</td><td align="center">免费支持</td><td align="center">加入又拍云联盟，并在网站底部放置logo</td><td align="center"><a href="https://console.upyun.com/register/?invite=r1A6SzenN" rel="noopener" data-token="6f5d24f98d1c2245b213a55ed7788d15" target="_blank">&gt;&gt;&gt; 点击注册</a></td></tr></tbody></table></div><h2 id="将代码部署至码云"><a href="#将代码部署至码云" class="headerlink" title="将代码部署至码云"></a>将代码部署至码云</h2>]]></content>
      
      
      <categories>
          
          <category> CDN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 又拍云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo如何添加视频</title>
      <link href="/2019/09/08/00003/"/>
      <url>/2019/09/08/00003/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>我们这里想在博客中添加视频页，所以总结了一下如何添加视频的方式，以供参考。</p><h2 id="方法总结"><a href="#方法总结" class="headerlink" title="方法总结"></a>方法总结</h2><h3 id="通用方法"><a href="#通用方法" class="headerlink" title="通用方法"></a>通用方法</h3><p>直接把视频文件放在资源文件夹里，然后直接写 HTML 代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;video width=&quot;100%&quot; height=&quot;400&quot; src=&quot;dreamitpossible&quot; controls=&quot;controls&quot;&gt;</span><br><span class="line">The `&lt;video&gt;` tag is not supported by your browser.</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><p>例如我们这里要在友链这里添加视频，即在此文件夹下面添加视频文件，然后在src写下文件源的名称<br><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190915151542.png" class="lozad"></p><h3 id="插入爱奇艺、腾讯等控件"><a href="#插入爱奇艺、腾讯等控件" class="headerlink" title="插入爱奇艺、腾讯等控件"></a>插入爱奇艺、腾讯等控件</h3><p>找到分享界面<br><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190915152047.png" class="lozad"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe height=498 width=510 src=&apos;https://player.youku.com/embed/XMjk4ODAyMzIyOA==&apos; frameborder=0 &apos;allowfullscreen&apos;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/yimagudao/article/details/89524210" target="_blank" rel="noopener">https://blog.csdn.net/yimagudao/article/details/89524210</a></p><h3 id="使用hexo的插件"><a href="#使用hexo的插件" class="headerlink" title="使用hexo的插件"></a>使用hexo的插件</h3><p>hexo-tag-dplayer 是 DPlayer 播放器的 Hexo 标签插件</p><h4 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h4><p>在我们博客的根目录中输入下面命令，下载安装此插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-dplayer</span><br></pre></td></tr></table></figure><h4 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h4><p>将下面的代码复制到主题页的index.md中，然后修改url的路径即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer key=value ... %&#125;</span><br><span class="line">例：</span><br><span class="line">&#123;% dplayer &quot;url=http://www.nenu.edu.cn/_upload/article/videos/03/5f/7c999eed42e3aadc413d7f851f0e/0f50b3eb-9285-41d2-ac4d-6cc363651aad_B.mp4&quot; &quot;autoplay=true&quot; &quot;preload=metadata&quot; &quot;hotkey=true&quot; %&#125;</span><br></pre></td></tr></table></figure><p>使用的选项图表所示</p><div class="table-box"><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>url</td><td><strong>必须值</strong></td><td>视频地址</td></tr><tr><td>loop</td><td><code>false</code></td><td>视频循环播放</td></tr><tr><td>volume</td><td><code>0.7</code></td><td>播放器音量</td></tr><tr><td>hotkey</td><td><code>true</code></td><td>开启热键</td></tr><tr><td>autoplay</td><td><code>true</code></td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>logo</td><td><code>-</code></td><td>在左上角展示一个 logo，你可以通过 CSS 调整它的大小和位置</td></tr><tr><td>mutex</td><td><code>true</code></td><td>该选项开启时，如果同页面有其他播放，该播放器会暂停</td></tr><tr><td>highlight</td><td><code>[]</code></td><td>自定义进度条提示点</td></tr><tr><td>preload</td><td><code>auto</code></td><td>视频文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td>theme</td><td><code>#ad7a86</code></td><td>播放器风格色彩设置</td></tr></tbody></table></div><blockquote><p>注：如果使用腾讯视频、优酷视频等在线视频网站的资源，需要先进行视频地址解析，如点量视频解析，获取到实际的视频地址。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加优秀的评论系统Valine</title>
      <link href="/2019/09/08/00007/"/>
      <url>/2019/09/08/00007/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>一个好的博客也是需要一个评论系统的，这里我们使用Valine。</p><p>其他评论系统还有 Disqus、Laibili、Gitment、Gitalk、Valine等等。</p><p><code>Valine</code>诞生于2017年8月7日，是一款基于<code>Leancloud</code>的快速、简洁且高效的无后端评论系统。<br>理论上支持但不限于静态博客，目前已有<code>Hexo</code>、<code>Jekyll</code>、<code>Typecho</code>、<code>Hugo</code> 等博客程序在使用Valine。但是由于这个是基于leancloud的，所以需要注册上面的账号，而且还需要实名认证。</p><h2 id="Leancloud注册"><a href="#Leancloud注册" class="headerlink" title="Leancloud注册"></a>Leancloud注册</h2><h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><p>这里关于注册的细节就不多说了，记得还需要实名认证，绑定邮箱等操作。如果不想认证的话，推荐使用其他的评论插件。</p><p>注册好之后，不需要了解，直接点击应用下方的创建应用，点击开发版本，写好名称确定即可</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190917212810.png" class="lozad"></p><h3 id="获取应用key"><a href="#获取应用key" class="headerlink" title="获取应用key"></a>获取应用key</h3><p>创建好应用之后，我们需要获取hexo需要的两样东西，一个是AppID,一个是AppKey。其他都不要管！</p><p>点击此项应用，然后找到应用Keys，复制这两项内容</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190917212944.png" class="lozad"></p><h3 id="添加安全域名"><a href="#添加安全域名" class="headerlink" title="添加安全域名"></a>添加安全域名</h3><p>我们还需要设置一下Web的安全域名，点击此项服务的安全中心，找到Web安全域名，将自己的域名写入</p><p><img alt data-src="https://cdn.jsdelivr.net/gh/LiuXiangYang-Git/cloudimg/img-2/20190922162507.png" class="lozad"></p><h2 id="Hexo主题配置"><a href="#Hexo主题配置" class="headerlink" title="Hexo主题配置"></a>Hexo主题配置</h2><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>我这里的主题是hexo-theme-butterfly，所以修改配置文件</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190917213302.png" class="lozad"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: false # if you want use valine,please set this value is true</span><br><span class="line">  appId:   # leancloud application app id</span><br><span class="line">  appKey:   # leancloud application app key</span><br><span class="line">  notify: false # valine mail notify (true/false) https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false # valine verify code (true/false)</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https://valine.js.org/#/avatar</span><br><span class="line">  lang: en # i18n: zh-cn/en/tw</span><br><span class="line">  placeholder: 欢迎畅所欲言 # valine comment input placeholder(like: Please leave your footprints )</span><br><span class="line">  guest_info: nick,mail,link #valine comment header inf</span><br></pre></td></tr></table></figure><p>开启valine，然后将上面复制的两项加入其中即可。</p><p>更多的配置项可以了解下文档</p><p><a href="https://valine.js.org/configuration.html" target="_blank" rel="noopener">https://valine.js.org/configuration.html</a></p><p>之后就可以重新部署发布就行了，效果还是不错的，快去试一下吧！</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190917214022.png" class="lozad"></p><h3 id="修改页面默认评论"><a href="#修改页面默认评论" class="headerlink" title="修改页面默认评论"></a>修改页面默认评论</h3><p>在 Hexo 博客中，评论的功能是在所有页面都默认开启的，但是有的时候我们在页面上不需要显示评论功能，例如分类，标记页面我们并不需要评论功能。</p><p>我们可以在 Front-matter 中通过<code>comments</code>属性设置true或false控制该页面或者是文章的评论功能是否打开，如我设置标签页面的评论功能关闭：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2019-07-18 15:16:50</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><h3 id="设置自定义头像"><a href="#设置自定义头像" class="headerlink" title="设置自定义头像"></a>设置自定义头像</h3><p>官方文档有详细介绍</p><p><a href="https://valine.js.org/avatar.html" target="_blank" rel="noopener">https://valine.js.org/avatar.html</a></p><h3 id="使用感受"><a href="#使用感受" class="headerlink" title="使用感受"></a>使用感受</h3><p>总体来说还算舒服，完全无广告，可谓之优雅。但由于这个评论系统还在开发中，许多细节还是不够成熟的，例如，发图片只能通过<code>Markdown</code>的形式发，还有安全性比起成熟的第三方评论系统还是比较差的。</p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客编辑器最佳推荐</title>
      <link href="/2019/09/08/00014/"/>
      <url>/2019/09/08/00014/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>博客搭建好之后，我们就要去完善其内容，将工作中的笔记和教程以及好用的软件总结成文章。使用了一段时间之后，总结了几个编辑工具，推荐给大家！</p><h2 id="软件推荐"><a href="#软件推荐" class="headerlink" title="软件推荐"></a>软件推荐</h2><h3 id="Notepad"><a href="#Notepad" class="headerlink" title="Notepad"></a>Notepad</h3><p>这个就不用了介绍了，大家熟知的类似于加强版的文本编辑工具。</p><h3 id="HexoEditor"><a href="#HexoEditor" class="headerlink" title="HexoEditor"></a>HexoEditor</h3><p>这个看名字就知道了,与Hexo结合的博客编辑工具，当然了在使用之前要先装好Git和Node.js。提供左右两种视图， 左边修改文档，右边直接显示生成的界面。<br>这是一款为 Hexo 做了优化的 Markdown 编辑器,使用 Electron 做框架修改自 Moeditor,<br>同时它还包括很多功能，其中我觉得最有用的就是：预览内容与 Hexo 生成页面内容高度相似。<br>这里因为它是Github的发布的开源项目，提供下载地址<br><a href="https://github.com/zhuzhuyule/HexoEditor/releases" target="_blank" rel="noopener">https://github.com/zhuzhuyule/HexoEditor/releases</a></p><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p>这是一款极致简洁的 markdown 编辑器。简洁到连编辑栏工具都没有，不过用起来很舒服，谁用谁知道。这里提供下载链接，然后下载对应的版本即可。</p><p><a href="https://www.typora.io/" target="_blank" rel="noopener">https://www.typora.io/</a></p>]]></content>
      
      
      <categories>
          
          <category> Window </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超实用的19个电脑快捷键</title>
      <link href="/2019/09/08/00016/"/>
      <url>/2019/09/08/00016/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Ctrl-f-搜索"><a href="#Ctrl-f-搜索" class="headerlink" title="Ctrl + f = 搜索"></a>Ctrl + f = 搜索</h3><h3 id="Ctrl-x-剪切"><a href="#Ctrl-x-剪切" class="headerlink" title="Ctrl + x = 剪切"></a>Ctrl + x = 剪切</h3><h3 id="Ctrl-v-粘贴"><a href="#Ctrl-v-粘贴" class="headerlink" title="Ctrl + v = 粘贴"></a>Ctrl + v = 粘贴</h3><h3 id="Ctrl-z-撤销"><a href="#Ctrl-z-撤销" class="headerlink" title="Ctrl + z = 撤销"></a>Ctrl + z = 撤销</h3><h3 id="Ctrl-p-唤出打印机"><a href="#Ctrl-p-唤出打印机" class="headerlink" title="Ctrl + p = 唤出打印机"></a>Ctrl + p = 唤出打印机</h3><h3 id="Win-d-返回桌面"><a href="#Win-d-返回桌面" class="headerlink" title="Win + d = 返回桌面"></a>Win + d = 返回桌面</h3><h3 id="Win-e-文件资源管理器"><a href="#Win-e-文件资源管理器" class="headerlink" title="Win + e = 文件资源管理器"></a>Win + e = 文件资源管理器</h3><h3 id="Win-l-电脑锁屏"><a href="#Win-l-电脑锁屏" class="headerlink" title="Win + l = 电脑锁屏"></a>Win + l = 电脑锁屏</h3><h3 id="Alt-F4-直接关闭当前程序"><a href="#Alt-F4-直接关闭当前程序" class="headerlink" title="Alt + F4 = 直接关闭当前程序"></a>Alt + F4 = 直接关闭当前程序</h3><h3 id="Win-r-唤出运行"><a href="#Win-r-唤出运行" class="headerlink" title="Win + r = 唤出运行"></a>Win + r = 唤出运行</h3><h3 id="Shift-Delete-彻底删除文件"><a href="#Shift-Delete-彻底删除文件" class="headerlink" title="Shift + Delete = 彻底删除文件"></a>Shift + Delete = 彻底删除文件</h3><h3 id="F2-文件重命名"><a href="#F2-文件重命名" class="headerlink" title="F2 文件重命名"></a>F2 文件重命名</h3><h3 id="Delete-删除"><a href="#Delete-删除" class="headerlink" title="Delete 删除"></a>Delete 删除</h3><h3 id="F5刷新当前页面"><a href="#F5刷新当前页面" class="headerlink" title="F5刷新当前页面"></a>F5刷新当前页面</h3><h3 id="Alt-空格-c-关闭当前程序"><a href="#Alt-空格-c-关闭当前程序" class="headerlink" title="Alt + 空格 +c = 关闭当前程序"></a>Alt + 空格 +c = 关闭当前程序</h3><h3 id="Pagedown-向下翻页"><a href="#Pagedown-向下翻页" class="headerlink" title="Pagedown 向下翻页"></a>Pagedown 向下翻页</h3><h3 id="Pageup-向上翻页"><a href="#Pageup-向上翻页" class="headerlink" title="Pageup 向上翻页"></a>Pageup 向上翻页</h3><h3 id="Ctrl-Shift-N-新建文件夹"><a href="#Ctrl-Shift-N-新建文件夹" class="headerlink" title="Ctrl + Shift + N 新建文件夹"></a>Ctrl + Shift + N 新建文件夹</h3>]]></content>
      
      
      <categories>
          
          <category> Window </category>
          
      </categories>
      
      
        <tags>
            
            <tag> system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑必装的三个良心软件</title>
      <link href="/2019/09/08/00017/"/>
      <url>/2019/09/08/00017/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h5 id="1-PanDownLoad"><a href="#1-PanDownLoad" class="headerlink" title="1.PanDownLoad"></a>1.PanDownLoad</h5><p>百度网盘下载缓慢，没会员，这个软件帮你解决！</p><p><a href="http://www.pandownload.com/" target="_blank" rel="noopener">http://www.pandownload.com/</a></p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190912124834.png" class="lozad"></p><h5 id="2-Dism"><a href="#2-Dism" class="headerlink" title="2.Dism++"></a>2.Dism++</h5><p>清理C盘空间，轻松优化系统，真正关闭系统更新，还原系统最优化的状态！</p><p><a href="https://www.chuyu.me/zh-Hans/index.html" target="_blank" rel="noopener">https://www.chuyu.me/zh-Hans/index.html</a></p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190912124508.png" class="lozad"></p><h5 id="3-火绒安全"><a href="#3-火绒安全" class="headerlink" title="3.火绒安全"></a>3.火绒安全</h5><p>电脑有病毒，有弹框软件，不喜欢360，试试这个软件！</p><p><a href="https://www.huorong.cn/" target="_blank" rel="noopener">https://www.huorong.cn/</a></p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190912124615.png" class="lozad"></p>]]></content>
      
      
      <categories>
          
          <category> Window </category>
          
      </categories>
      
      
        <tags>
            
            <tag> system </tag>
            
            <tag> software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo如何添加炫酷的地球模型</title>
      <link href="/2019/09/08/00005/"/>
      <url>/2019/09/08/00005/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><p>如何给我们的博客加上炫酷的3D地球模型呢，可以显示全球访问的地址和当前用户的地址是不是很厉害！<br>这里我们使用RevolverMaps插件，一起来看看吧！</p><h3 id="获取代码"><a href="#获取代码" class="headerlink" title="获取代码"></a>获取代码</h3><p>这里访问官网，我这里直接贴出来设置的地址，选择1,2,3,4你喜欢的样式，右面会出现样式示例。最后在第5步那里形成的代码就是所需获取的代码。<br><a href="http://www.revolvermaps.com/?target=setup" target="_blank" rel="noopener">http://www.revolvermaps.com/?target=setup</a><br><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190916225856.png" class="lozad"><br><img alt="图一" data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190916224349.png" class="lozad"><br>我这里提供代码，大家可以直接使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;//rf.revolvermaps.com/0/0/8.js?i=59ccsxtrqut&amp;amp;m=0&amp;amp;c=ff0000&amp;amp;cr1=ffffff&amp;amp;f=arial&amp;amp;l=33&quot; async=&quot;async&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="添加至博客中"><a href="#添加至博客中" class="headerlink" title="添加至博客中"></a>添加至博客中</h3><p>效果如图<br><img alt="图二" data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190916224615.png" class="lozad"><br>因为我们是在博客的右侧栏添加内容，就得了解它右侧栏是如何显示的，如图三所示，右边所有的栏目都有一个pug文件，这里我们按部就班新建一个card_map.pug.将代码copy进去<br><img alt="图三" data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190916224655.png" class="lozad"><br>然后编辑图四的文件<br><img alt="图四" data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190916225054.png" class="lozad"><br>加入下面的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if theme.aside.card_webinfo</span><br><span class="line">  include widget/card_webinfo.pug</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> revolvermaps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客随想</title>
      <link href="/2019/09/08/00015/"/>
      <url>/2019/09/08/00015/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="简短总结"><a href="#简短总结" class="headerlink" title="简短总结"></a>简短总结</h1><p>不折腾，不人生！千里之行，始于足下！开搞！</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/6630472929907959699.jpg" class="lozad"></p><p>只可惜有一些事已成往事，消际于岁月中。再想行动已徒劳无功，只怪自己空有想法无作为，蓦然回首有心无用空对月，想一想…不多说，进入主题！</p><p>没日没夜的搞，中间遇到了很多头疼的问题，解决起来很是棘手。但是还是一步步过来了，经过从开始搭建到修改成属于自己的个性化网站，也学到了不少东西，也意识到自己需要学习的东西还有很多，太多了吧！哈哈，不过慢慢来吧，也不能急，这个东西是需要日积月累维护好的。刚开始的时候就有点着急总是想着将功能和内容都完善好，结果反倒是适得其反，遇到的问题没思路解决，进度也是迟迟没有展开。到了晚上睡不着想了很久，理了一下思路。一步步完成，循序渐进，先熟悉博客模板，熟悉文件是属于哪个功能层面的，摸清所有配置文件，将此文件从根目录一网打尽，然后逐步将功能完善成型，最后填充内容！</p><p>目前我的个人博客基本已经搭建好，后续安排的计划为</p><p>1.不断将内容充实，发布工作中的文章笔记和有利于工作的技巧，当然了也会发表一些生活感悟，旅行传记的文章，丰富文章的内容。</p><p>2.做CDN加速和简单的搜索引擎收录博客以及博客的图书页功能、音乐页功能、视频页功能等等博客的更多实用功能！</p><p>3.目前我的博客是采用的GithubPagers+静态网站做的，服务器用的也是人家的，后续手头充裕了会买几台云主机设备当做自己的网站服务器和图片服务器等等，然后在买一个属于自己的域名，发布到互联网中，做一些搜索引擎的优化，让更多的人能通过搜索引擎去访问我的主页。当然了我现在只是一只小麻雀，不过麻雀虽小，但五脏俱全。我也会每天抽出一两个小时去维护好我的网站，增加一些新的栏目，实时更新里面的内容。</p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑越来越卡怎么办 实用的电脑优化方案</title>
      <link href="/2019/09/08/00018/"/>
      <url>/2019/09/08/00018/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><p>电脑使用久了，硬件的损耗以及系统的臃肿都会导致电脑越来越慢，越来越卡。很多人电脑卡顿就要重装系统?其实重装系统是万不得已的通用方式，其实我们可以采取优化下电脑的方式。重装系统虽然是个万能解决系统问题的好方法，但是也需要在重装后注意电脑的使用，否则过一段时间电脑还是会恢复原状，依旧卡顿的。这里也总结了大部分电脑重装的原因：</p><p>重装电脑无外乎两种原因：第一种就是电脑变慢，而第二种原因就是电脑操作系统发生了不可修复性的损坏;而因为第一种原因去重装系统的人占了多数。其实除非你的电脑是因为中了病毒而变得慢变得卡顿，否则重装系统这种方式其实是一种治标不治本的方式。</p><p>有大约40%的人是因为系统不可修复而重装系统，有60%左右的人是因为电脑卡顿而重装系统;可见因为电脑卡顿而重装系统的还是占多数，也就是说大多数人选择了治标不治本的方式。所以这里我们总结了电脑卡顿的一些原因，以供分析。</p><h3 id="为什么系统运行变慢了"><a href="#为什么系统运行变慢了" class="headerlink" title="为什么系统运行变慢了"></a>为什么系统运行变慢了</h3><h4 id="系统启动项太多"><a href="#系统启动项太多" class="headerlink" title="系统启动项太多"></a>系统启动项太多</h4><p>老生常谈，这个问题会用电脑的基本上应该都清楚吧，windows系统启动项就是系统在启动过程中，某些程序会在前台或者后台自启动运行。一般重装系统后或者新买的电脑都需要安装很多软件，因此会有大量的启动项，开机时就会造成系统启动很慢而且运行出现卡顿的情况。<br><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190912160837.png" class="lozad"></p><h4 id="系统服务太多"><a href="#系统服务太多" class="headerlink" title="系统服务太多"></a>系统服务太多</h4><p>windows服务一般都是运行在后台的程序，这些服务非常多，并且不像普通软件程序一样，这些服务只能再任务管理器中才可以看到，所有服务都分为自动、手动、禁用或者延迟自动四种启动类型，如果自动启动服务特别多的话，也会导致系统占用过多的硬件性能资源，进而导致电脑卡顿。</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190912161040.png" class="lozad"></p><h4 id="UI动画效果"><a href="#UI动画效果" class="headerlink" title="UI动画效果"></a>UI动画效果</h4><p>Win7/Win8/Win10系统的UI是越来越好看的，并且动画效果也越来越多，但是越多的动画效果，对于那些配置不好的机器来说就是累赘。比如最简单的切换窗口都可能造成卡顿。</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190912161143.png" class="lozad"></p><h4 id="硬件性能"><a href="#硬件性能" class="headerlink" title="硬件性能"></a>硬件性能</h4><p>硬件性能不足也是造成系统卡顿的主要问题之一。虽然越新的驱动越能发挥硬件的性能，但是笔者在这里说点题外话，不推荐大家随便更新驱动，驱动这个东西非常麻烦，一般来说出厂是什么就用什么，如果真的打算更新驱动的话，一定要去官方网站查找最新的稳定版驱动，驱动程序出现问题的话，小问题，也许还能进安全模式卸了重新弄，大问题那就是只能重装系统。另外，越新的系统对于硬件的新旧以及性能的要求也是挺高的。</p><h3 id="付诸实践，进行优化的方案"><a href="#付诸实践，进行优化的方案" class="headerlink" title="付诸实践，进行优化的方案"></a>付诸实践，进行优化的方案</h3><h4 id="清理后台进程"><a href="#清理后台进程" class="headerlink" title="清理后台进程"></a>清理后台进程</h4><p>直接打开任务管理器，选择要关闭的程序，点击结束任务</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190912162359.png" class="lozad"></p><p>当然也可以使用第三方的工具去清理后台进程！</p><h4 id="取消启动项"><a href="#取消启动项" class="headerlink" title="取消启动项"></a>取消启动项</h4><p>非Win10系统：使用Win+R快捷键，在弹出的运行窗口中输入msconfig后回车，切换到启动页面，就可以看到开机启动项。</p><p>Win10系统：直接打开任务管理器，就可以看到有启动标签页，可以在该页面管理启动项。</p><p>除了以上方法还有就是每个软件都打开一下，在软件的设置界面找一下是否有开机自启动的选项，有的话就全部取消即可。当然也可以直接使用第三方软件，比如360安全卫士、腾讯管家以及我上篇文章推荐的火绒安全软件。</p><h4 id="优化系统服务"><a href="#优化系统服务" class="headerlink" title="优化系统服务"></a>优化系统服务</h4><p>按WIN+R快捷键，输入services.msc，回车，在打开的服务窗口中可以根据自己的需要修改一些系统服务的启动类型。当然这里如果你不太懂这些服务的话，建议是使用第三方工具，比较省事。</p><h4 id="关系或减少动画效果"><a href="#关系或减少动画效果" class="headerlink" title="关系或减少动画效果"></a>关系或减少动画效果</h4><p>鼠标右键“我的电脑”，选择属性-高级系统设置-高级-性能设置，切换到视觉效果页面，选择“调整为最佳性能”，确定保存即可。或者你可以自己决定哪些是不需要的，取消掉打勾再保存即可。</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190912161819.png" class="lozad"></p><h4 id="升级硬件"><a href="#升级硬件" class="headerlink" title="升级硬件"></a>升级硬件</h4><p>如果你的电脑使用七八年了，系统优化也好重装也好其实效果不大，硬件老化很严重，配置肯定也是跟不上时代的，所以只能通过升级硬件或者直接更换整机这个方法。目前基本上是用固态硬盘装系统，如过是升级硬件的话首先就是要加固态硬盘，如果是更换整机的话建议购买带有固态硬盘的电脑，目前都是128G SSD+1T HDD的方案，内存方面如今8G内存才是标配。</p><p>鼠标右键“我的电脑”，选择属性-高级系统设置-高级-性能设置，切换到视觉效果页面，选择“调整为最佳性能”，确定保存即可。或者你可以自己决定哪些是不需要的，取消掉打勾再保存即可。</p><h4 id="逃不过的重装系统"><a href="#逃不过的重装系统" class="headerlink" title="逃不过的重装系统"></a>逃不过的重装系统</h4><p>这个是比较简单但也是比较麻烦的方法，一般系统用久了缓存也多，清理也不一定能清理干净，所以重装系统的话确实可以让电脑流畅一段时间，不过就是要重装一些软件还有很多乱七八糟的系统设置。如果你是出厂预装的正版Win10系统的话也可以使用恢复出厂设置的功能，可以直接清除所有数据。</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/u=527191015,1814134350&fm=26&gp=0.jpg" class="lozad"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>老电脑优化说简单也简单，安装一个安全软件，基本上都是一键优化的，但是有些用户就觉得这些安全软件都是流氓软件，会有各种全家桶，那么你就只能通过自己手动优化或者重装系统来解决电脑卡顿的问题了。当然不差钱的话最好还是通过升级硬件来解决系统运行卡顿的问题，一般主要是更换硬盘、内存等配件，电脑的散热对于系统的运行也有一定的影响，所以定期清灰也是有帮助的。</p>]]></content>
      
      
      <categories>
          
          <category> Window </category>
          
      </categories>
      
      
        <tags>
            
            <tag> system </tag>
            
            <tag> 优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo如何使用添加歌单(音乐)页面</title>
      <link href="/2019/09/08/00004/"/>
      <url>/2019/09/08/00004/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>这里我们总结一下在博客中添加音乐页的方法和直接添加插件的方式。<br>我们这里的主题是hexo-butteryfly。如果大家是其他主题的话，方式应该差不多，需要自己去研究网站的构成。</p><h2 id="使用音乐平台提供插件"><a href="#使用音乐平台提供插件" class="headerlink" title="使用音乐平台提供插件"></a>使用音乐平台提供插件</h2><h3 id="使用第三方插件"><a href="#使用第三方插件" class="headerlink" title="使用第三方插件"></a>使用第三方插件</h3><p>以网易云为例，网页端点击生成外链播放器即可生成外链代码，如我的某个歌单生成外链。<br>可以在自己博客页面中嵌入插件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe </span><br><span class="line"> frameborder=&quot;no&quot; border=&quot;0&quot; </span><br><span class="line"> marginwidth=&quot;0&quot; marginheight=&quot;0&quot; </span><br><span class="line"> width=530 height=310 </span><br><span class="line"> src=&quot;//music.163.com/outchain/player?type=0&amp;id=2205641361&amp;auto=0&amp;height=430&quot;&gt;</span><br><span class="line">&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>方便是方便，不过缺点非常明显，而最不能忍得是网易音乐有些音乐因为版权保护，没办法生成外链。</p><h3 id="延伸小功能"><a href="#延伸小功能" class="headerlink" title="延伸小功能"></a>延伸小功能</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>这里在延伸一下，添加一个小功能，添加隐藏的背景音乐播放功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio autoplay=&quot;autoplay&quot; controls=&quot;controls&quot;loop=&quot;loop&quot; preload=&quot;auto&quot;</span><br><span class="line">           src=&quot;http://demo.mimvp.com/html5/take_you_fly.mp3&quot;&gt;</span><br><span class="line">     你的浏览器版本太低，不支持audio标签</span><br><span class="line">&lt;/audio&gt;</span><br></pre></td></tr></table></figure><blockquote><p>说明：1、使用autoplay=”autoplay”，则背景音乐将在音网页打开后就自动马上播放。</p><p>2、使用controls=”controls”，则为了在页面内显示显示控件，如播放按钮。</p><p>3、使用”loop=”loop”，则是为了是背景音乐重复播放。</p><p>4、使用preload=”auto”，则音频在页面加载的同时进行加载，并预备播放。</p><p>5、使用src=””，即是在””内加入背景音乐的保存路径，如：src=”web网页制作\03.mp3”。</p></blockquote><p>如果想隐藏播放控件，则使用一下语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">     audio&#123;</span><br><span class="line">             display: none;</span><br><span class="line">         &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>注意：谷歌不在支持audio的自动播放选项，因为此项涉及声音过大以及流量问题对用户的体验不太好，已经关闭，所以推荐大家使用OGG格式的音频文件即可！</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;section&gt;&lt;embed src=&quot;./bgsound.mp3&quot; autostart=&quot;true&quot; loop=&quot;true&quot; hidden=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/section&gt;</span><br></pre></td></tr></table></figure><p>src 是音乐地址  loop为true 是循环播放   hidden是隐藏下面的播放器</p><h2 id="使用-hexo-tag-aplayer-插件"><a href="#使用-hexo-tag-aplayer-插件" class="headerlink" title="使用 hexo-tag-aplayer 插件"></a>使用 hexo-tag-aplayer 插件</h2><h3 id="安装此插件"><a href="#安装此插件" class="headerlink" title="安装此插件"></a>安装此插件</h3><p>hexo-tag-aplayer 就是将 APlayer 内嵌入博客页面的 Hexo 插件，hexo就是好，不错不错！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><p>原先 hexo-tag-aplayer 不支持 MetingJS，使得需要图片url，音乐url等等参数，操作起来都很麻烦，需要去音乐网站扒音乐播放链接或者下载下来存储在七牛云或本地，要了解具体参数和使用可以查看其中文文档了解。</p><h3 id="MeingJS-支持-3-0-新功能"><a href="#MeingJS-支持-3-0-新功能" class="headerlink" title="MeingJS 支持 (3.0 新功能)"></a>MeingJS 支持 (3.0 新功能)</h3><p>MetingJS 是基于Meting API 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p><p>如果想在本插件中使用 MetingJS，请在 Hexo 配置文件 _config.yml 中设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">    meting: true</span><br></pre></td></tr></table></figure><h3 id="博客中如何使用"><a href="#博客中如何使用" class="headerlink" title="博客中如何使用"></a>博客中如何使用</h3><p>在此文件夹下面的music文件夹有一个index.md,编辑此文件<br><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190916222346.png" class="lozad"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;3986040&quot; &quot;netease&quot; &quot;song&quot; &quot;theme:#555&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><p>在来一个歌单模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的歌单</span><br><span class="line">date: 2019-09-13 12:12:50</span><br><span class="line">---</span><br><span class="line">&#123;% meting &quot;2300709666&quot; &quot;netease&quot; &quot;playlist&quot; &quot;theme:#FF4081&quot; &quot;mode:circulation&quot; &quot;mutex:true&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><p>有关选项列表如下:</p><div class="table-box"><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td><strong>必须值</strong></td><td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td>server</td><td><strong>必须值</strong></td><td>音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td>type</td><td><strong>必须值</strong></td><td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td>fixed</td><td><code>false</code></td><td>开启固定模式</td></tr><tr><td>mini</td><td><code>false</code></td><td>开启迷你模式</td></tr><tr><td>loop</td><td><code>all</code></td><td>列表循环模式：<code>all</code>, <code>one</code>,<code>none</code></td></tr><tr><td>order</td><td><code>list</code></td><td>列表播放模式： <code>list</code>, <code>random</code></td></tr><tr><td>volume</td><td>0.7</td><td>播放器音量</td></tr><tr><td>lrctype</td><td>0</td><td>歌词格式类型</td></tr><tr><td>listfolded</td><td><code>false</code></td><td>指定音乐播放列表是否折叠</td></tr><tr><td>storagename</td><td><code>metingjs</code></td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td>autoplay</td><td><code>true</code></td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td><code>true</code></td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td><code>340px</code></td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td><code>auto</code></td><td>音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td>theme</td><td><code>#ad7a86</code></td><td>播放器风格色彩设置</td></tr></tbody></table></div><h3 id="在非post页面中使用"><a href="#在非post页面中使用" class="headerlink" title="在非post页面中使用"></a>在非post页面中使用</h3><p>在/source/文件夹下自定义的页面life，如果需要该页面使用插件，最简单的方式就是直接在index.md中引用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好用的图床工具推荐-PicGo+GitHub图床，让Markdown飞</title>
      <link href="/2019/09/08/00022/"/>
      <url>/2019/09/08/00022/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><p>所谓图床工具，就是自动把本地图片转换成链接的一款工具，网络上有很多图床工具，就目前使用种类而言，PicGo 算得上一款比较优秀的图床工具。它是一款用 Electron-vue 开发的软件，可以支持微博，七牛云，腾讯云COS，又拍云，GitHub，阿里云OSS，SM.MS，imgur 等8种常用图床，功能强大，简单易用。之前想过自己去搭建一个图床服务，不过这玩意成本也有点高，备案+购买服务器一年好几百块。而且也没有必要去花这个钱，偶尔在网上看到用GitHub+PicGo的方式搭建图床服务，哇塞这个也太棒了吧！这里记录一下搭建的教程以供大家参考。</p><h3 id="GitHub仓库配置"><a href="#GitHub仓库配置" class="headerlink" title="GitHub仓库配置"></a>GitHub仓库配置</h3><h4 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h4><p>首先点击GitHub主页右上角的+，点击新建仓库如图一所示<br><img alt="图一" data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190909225754.png" class="lozad"><br>填写仓库的信息，这里我起名为cloudimg，这里注意，仓库的访问设置为 Public 因为后面通过客户端访问算是外部访问，因此无法访问 Private ，这样的话图片传上来之后只能存储不能显示，所以必须设置为public。(我这里为了给大家演示所以重新写了一遍，这里报错是说重复的意思)<br><img alt="图二" data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190909230119.png" class="lozad"></p><h4 id="创建token复制并且保存"><a href="#创建token复制并且保存" class="headerlink" title="创建token复制并且保存"></a>创建token复制并且保存</h4><p>这里我们仓库建立好之后，点击右上角的头像，按照下图的顺序添加tokens值</p><p>Settings–Developer–settings</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190917150951.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190917151449.png" class="lozad"></p><p>将名称写好，然后西面全部勾选即可</p><blockquote><p>注：创建成功后，会生成一串token，这串token之后不会再显示，所以第一次看到的时候，就要好好保存</p></blockquote><h3 id="安装PicGo"><a href="#安装PicGo" class="headerlink" title="安装PicGo"></a>安装PicGo</h3><h4 id="下载运行PicGo"><a href="#下载运行PicGo" class="headerlink" title="下载运行PicGo"></a>下载运行PicGo</h4><p>我们这里下载最新版的，这里直接提供下载地址</p><p><a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a></p><p>直接下载window对应的版本<br><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190917153005.png" class="lozad"></p><h4 id="配置自己的图床"><a href="#配置自己的图床" class="headerlink" title="配置自己的图床"></a>配置自己的图床</h4><p>安装好之后，进入PicGo工具，配置我们的Github图床，里面有很多结合的图床工具，大家根据个人喜好自己选择</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190917152014.png" class="lozad"></p><blockquote><ul><li><p>设定仓库名的时候，是按照“账户名/仓库名的格式填写”</p></li><li><p>分支名统一填写“master”</p></li><li><p>将之前的Token黏贴在这里</p></li><li><p>存储的路径可以按照我这样子写，就会在repository下创建一个“img”文件夹</p></li><li><p>自定义域名的作用是，在上传图片后成功后，PicGo会将“自定义域名+上传的图片名”生成的访问链接，放到剪切板上<code>https://raw.githubusercontent.com/用户名/RepositoryName/分支名，</code>，自定义域名需要按照这样去填写</p><p>例如我的<a href="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master" target="_blank" rel="noopener">https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master</a></p></li></ul></blockquote><h4 id="设置快捷键"><a href="#设置快捷键" class="headerlink" title="设置快捷键"></a>设置快捷键</h4><p>这里根据个人喜好去设置快捷键等配置，我这里的快捷键是Ctrl+Alt+Z。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>将上面的步骤都设置好之后，就可以让自己的Markdown文档飞起来了，每次截图之后，都可以按一下Ctrl+Alt+Z，这样就会将剪切板上面的截图转化为在线网络图片链接，而且可以直接复制，简直不要太厉害！</p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> picgo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github pagers搭建的博客使用自定义域名以及购买域名等设置</title>
      <link href="/2019/09/08/00002/"/>
      <url>/2019/09/08/00002/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、简言"><a href="#一、简言" class="headerlink" title="一、简言"></a>一、简言</h2><p>由于有个人需求，需要使用到域名，思来想去还是有一个自己的域名好一点，也就是钱的问题，而且域名现在也不贵，拿出自己的部分零花钱购买一个域名也不为过。这里记录下自己在阿里云购买域名的过程。当然了大家也可以在其他平台购买域名，主流的有Daddy、阿里云、腾讯云、华为云等等。</p><h2 id="二、-购买域名"><a href="#二、-购买域名" class="headerlink" title="二、 购买域名"></a>二、 购买域名</h2><h3 id="阿里云平台"><a href="#阿里云平台" class="headerlink" title="阿里云平台"></a>阿里云平台</h3><p>登录阿里云，万网已经被阿里爸爸收购了，所以在这里我们看到是阿里云旗下品牌，在此选项框输入自己想好的域名看看有没有被占用。</p><p><a href="https://account.aliyun.com" target="_blank" rel="noopener">https://account.aliyun.com</a></p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190921202034.png" class="lozad"></p><p>后缀名有很多，根据名称有不同的寓意，例如.top展现行业地位、.xin网络诚信专属域名、.cloud云端域名、.space你的专属网络空间。不同的域名价格也不太一样。贵的类似于.com .我爱你 .cn等等。我这里就选择购买了.space的后缀名。写入域名之后，下面会出现域名的情况，选择满意的加入到清单中</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190921192735.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190921111108.png" class="lozad"></p><p>然后点击立即结算即可完成，完成之后我们进入至控制台。</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190921193012.png" class="lozad"></p><p>这样我们就看到自己购买的域名列表了。在解析之前，我们要完成实名认证才可以去使用它。</p><p>这大概要两三天的时间，完成实名认证之后，我们就可以添加域名解析了。</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190921111835.png" class="lozad"></p><p>点击解析设置，进入解析我们的域名</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190921193455.png" class="lozad"></p><p>添加记录</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190921193538.png" class="lozad"></p><p>记录类型点击将域名指向一个地址</p><p>主机记录写@，解析线路默认，记录值这里我们写ping自己的博客的地址，TTL为10分钟</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190921193806.png" class="lozad"></p><p>再写一个主机记录修改为www。两个记录类型已经完成，这里我们的阿里云就完成设置了。</p><h2 id="Github配置"><a href="#Github配置" class="headerlink" title="Github配置"></a>Github配置</h2><h3 id="hexo添加CNAME"><a href="#hexo添加CNAME" class="headerlink" title="hexo添加CNAME"></a>hexo添加CNAME</h3><p>在hexo本地目录 <code>source</code> 目录下面新建一个文件，取名为 <code>GNAME</code> (无后缀)，内容就是上面所说到的自己的域名如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">liuxiangyang.space</span><br></pre></td></tr></table></figure><p>运行hexo指令使配置修改起效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g  //会在public中生成一个GNAME文件</span><br><span class="line">hexo d  //修改内容提交到github博客上</span><br></pre></td></tr></table></figure><h3 id="Github绑定个人域名"><a href="#Github绑定个人域名" class="headerlink" title="Github绑定个人域名"></a>Github绑定个人域名</h3><p>这是比较重要的一步，打开博客在Github中的地址，然后切换到 <a href="https://github.com/linshuhe1/linshuhe1.github.io/settings" target="_blank" rel="noopener"><code>Settings</code>页</a>，设置<code>Custom domain</code>内容为我们自己的域名值（例如：我的域名是liuxiangyang.space），点击<code>Save</code>按钮保存：</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190921194605.png" class="lozad"></p><h3 id="小知识"><a href="#小知识" class="headerlink" title="小知识"></a>小知识</h3><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这样我们就完成了使用自己域名解析到自己的博客中，美美哒，访问我们的域名地址即可进入到博客。</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190921194930.png" class="lozad"></p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为交换机划分Vlan和添加Vlanif以及设置端口的方式</title>
      <link href="/2019/09/08/00023/"/>
      <url>/2019/09/08/00023/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><p>这里领导搭建公司的两地(延申集群)，需要对核心交换机进行配置，特此总结一下。</p><p><strong>需求如下</strong></p><p>浦江vlan：<br>Vsphere集群管理网络：192.170.8.0/24 vlan2110<br>Vsan网络：192.170.9.0/24 vlan2120 #添加interface XGigabitEthernet2/0/6 和7(access)<br>VM网络：192.170.10.0/24 vlan2130 #添加interface XGigabitEthernet2/0/11和12(trunk)</p><h3 id="划分Vlan"><a href="#划分Vlan" class="headerlink" title="划分Vlan"></a>划分Vlan</h3><p>VLAN(Virtual Local Area Network），即虚拟局域网，是将一个物理的LAN在逻辑上划分成多个广播域的通信技术。VLAN内的主机间可以通信，而不同VLAN间不能通信，从而将广播报文限制在一个VLAN内。</p><h4 id="进入交换机界面输入sy-进入-模式"><a href="#进入交换机界面输入sy-进入-模式" class="headerlink" title="进入交换机界面输入sy,进入[]模式"></a>进入交换机界面输入sy,进入[]模式</h4><p><img alt="图一" data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190910094102.png" class="lozad"></p><h4 id="创建vlan"><a href="#创建vlan" class="headerlink" title="创建vlan"></a>创建vlan</h4><p>直接输入vlan 数字即可，这里我们可以使用dis this来查看vlan的详细信息。</p><p>[Quidway]vlan 2</p><p>批量创建vlan的方法</p><p>vlan batch 10 20 </p><h3 id="添加Vlanif"><a href="#添加Vlanif" class="headerlink" title="添加Vlanif"></a>添加Vlanif</h3><p>这里介绍下Vlanif，vlan间互相通信可以通过<strong>vlanif</strong>接口来实现，也可以通过<strong>路由器的子接口</strong>来实现。</p><p>vlanif即三层接口是一个虚拟口，可以配置IP地址，vlan是一个二层vlan标示相当于对数据打标签，vlan对应vlanif接口。</p><h4 id="配置vlan-IP"><a href="#配置vlan-IP" class="headerlink" title="配置vlan IP"></a>配置vlan IP</h4><p>[Quidway]interface Vlanif 2</p><h4 id="配置vlanif-ip地址"><a href="#配置vlanif-ip地址" class="headerlink" title="配置vlanif ip地址"></a>配置vlanif ip地址</h4><p>[Quidway]interface Vlanif 2</p><p>[Quidway-Vlanif2]ip address 10.10.100.1 255.255.255.0</p><p>配置完成之后即可输入dis this查看配置内容</p><h3 id="端口配置"><a href="#端口配置" class="headerlink" title="端口配置"></a>端口配置</h3><h4 id="进入端口配置-access"><a href="#进入端口配置-access" class="headerlink" title="进入端口配置(access)"></a>进入端口配置(access)</h4><p>int g/0/0/1 #进入以太网接口0/0/1</p><p>int xg/0/0/2#进入万兆以太网接口0/0/2</p><p>port link-type access 设置端口为access模式</p><p>port default vlan 10 将端口放入vlan10</p><h4 id="进入端口配置-trunk"><a href="#进入端口配置-trunk" class="headerlink" title="进入端口配置(trunk)"></a>进入端口配置(trunk)</h4><p>int g/0/0/1</p><p>int xg/0/0/1(前面+x为万兆)</p><p>port link-type trunk 设置端口为trunk模式</p><p>port trunk allow-pass vlan all 设置为允许所有vlan的报文通过</p><p>port trunk allow-pass vlan 10 20 runk口允许通过的VLAN</p><p>Access类型的接口用来连接用户主机，它主要用于接入链路，且接入链路上通过的帧为不带Tag的以太网帧。如果Access接口配置了缺省VLAN，则在该报文上加上Tag标记，并将Tag中的VID字段的值设置为接口所属的缺省VLAN编号，此时接入链路上允许与缺省VLAN Tag匹配的以太网帧通过。</p><p>Trunk类型的接口用来连接其它交换机设备，它主要连接干道链路。Trunk接口允许多个VLAN的帧通过。</p><h4 id="删除端口的配置"><a href="#删除端口的配置" class="headerlink" title="删除端口的配置"></a>删除端口的配置</h4><p>undo port link-type 删除端口的配置</p><h3 id="删除vlan的配置"><a href="#删除vlan的配置" class="headerlink" title="删除vlan的配置"></a>删除vlan的配置</h3><p>undo vlan </p><p>undo vlanif</p><h4 id="批量将端口划入vlan"><a href="#批量将端口划入vlan" class="headerlink" title="批量将端口划入vlan"></a>批量将端口划入vlan</h4><p>注意：端口划入vlan前需将其设置为access模式</p><p>[1]port-group 1 建立分组并命名为1</p><p>[1-port-group-1]group-member g0/0/1 to g0/0/10 将g0/0/1 到10的端口加入到1分组中</p><p>[1-port-group-1]port link-type access 将端口类型均设置为access</p><p>[1-port-group-1]port default vlan 10 将1分组及组内端口划入vlan10</p>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> huawei </tag>
            
            <tag> 交换机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于博客的那些事</title>
      <link href="/2019/09/08/00021/"/>
      <url>/2019/09/08/00021/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><p>本来只是想搭建一个博客让自己凌乱的笔记显得正常和体面一些，但是被网上各种各样的技术带入各种坑位，本着不折腾不会死的态度全部通关一遍，于是便有了此文。我尝试了几个目前比较流行的搭建博客的方式，通过搭建的技术门槛和颜值等分别做简单介绍，如果你正准备搭建一个博客，能够比较直观的了解目前流行的技术和最终的实现效果，帮助你做出适合自己的选择。穿梭于各种博客中，并且记录当下主流的博客平台和相关技术，相信会给你提供帮助！<br>没有详细的博客安装教程，安装请查看官方文档或自行摆渡xx教程、xx一键包。后文会提供部分搭建博客的教程。</p><h3 id="怎么面对博客"><a href="#怎么面对博客" class="headerlink" title="怎么面对博客"></a>怎么面对博客</h3><ul><li>博客不像微博，有一定的含金量，而不是走马灯的宣言</li><li>写作的过程其实就是思考的字面化，梳理知识体系的同时反思知识的内化程度，分清楚哪些是“知道了”，哪些是“掌握了”</li><li>通过博客的形式分享是学习的一种技巧（费曼技巧，让小孩子明白你要讲述的内容），内化知识的同时也从分享中得到快乐</li><li>用写作来记录成长的过程，保持这种习惯能让你听到意志力成长的声音</li><li>同时博客也是一种无形的资产，量变的积累过程兴许会带来许多隐形的机会（接广告，出书啊等等知乎上忽悠的），总之多写总没错</li></ul><h3 id="怎么把博客放在网上"><a href="#怎么把博客放在网上" class="headerlink" title="怎么把博客放在网上"></a>怎么把博客放在网上</h3><p>目前比较流行的博客实现可以分为三种方式，各有不同程度的技术门槛、功能支持、主题颜值等。接下来将会通过实例展示不同的博客形式。</p><ul><li>个人主页注册。指的是在现有的博客网站、论坛或社区上注册个人主页</li><li>静态网站生成。通常是由jekyll、hugo或hexo等技术生成静态网站，然后通过git上传到Github Pages、Coding Pages等托管平台免费展示</li><li>内容管理系统。带有后台管理的博客系统，需要配置空间（服务器）、数据库以及域名等，然后安装成熟的WordPress、ghost等内容管理系统</li></ul><h3 id="个人主页注册"><a href="#个人主页注册" class="headerlink" title="个人主页注册"></a>个人主页注册</h3><p>注册形式的个人博客，优势是没有技术门槛，注册即用；拥有成熟的平台支持，方便推广。但是平台风格单一，不仅自定义程度低，而且还有许多形式限制（当然限制也有专心于内容的好处），推荐给嫌麻烦不喜欢折腾又不反感条条框框的人。<br>1）<a href="https://segmentfault.com/" target="_blank" rel="noopener">SegmentFault</a></p><ul><li>中式StackOverFlow论坛，成熟的技术交流平台</li><li>网站提供文章专栏板块，并且有审核机制</li><li>功能： Markdown / 标签 / 评论 / 智能目录</li><li>lipstick 颜值：正常 / 简洁<br><img alt="网站主页" data-src="https://img-blog.csdnimg.cn/20190905192309972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="博客页面" data-src="https://img-blog.csdnimg.cn/20190905192457864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>2）<a href="https://www.jianshu.com/" target="_blank" rel="noopener">简书</a></li><li>专注文字的轻博客平台，定位清新</li><li>功能：Markdown / 评论 / 标签</li><li>lipstick 颜值：正常 / 干净<br><img alt="网站主页" data-src="https://img-blog.csdnimg.cn/20190905192413243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="博客页面" data-src="https://img-blog.csdnimg.cn/20190905192525809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>3）<a href="https://www.zhihu.com/signin?next=/" target="_blank" rel="noopener">知乎</a></li><li>泛娱乐化的专业知识交流平台，提供文章板块</li><li>功能：Markdown / 评论 / 标签</li><li>颜值：正常 / 大气<br><img alt="卡通的登录界面" data-src="https://img-blog.csdnimg.cn/2019090519262113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="网站主页" data-src="https://img-blog.csdnimg.cn/20190905192853660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="博客页面" data-src="https://img-blog.csdnimg.cn/20190905192918657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>4） <a href="https://www.csdn.net/" target="_blank" rel="noopener">CSDN</a></li><li>老牌技术论坛</li><li>关注公众号才能注册，8位数验证码等一堆反人类交互体验很不是能忍</li><li>功能：Markdown / 评论 / 标签 / 皮肤 / 老式文章管理</li><li>颜值：不卸妆的话还能看，卸妆就…<br><img alt="个人主页" data-src="https://img-blog.csdnimg.cn/20190905193046185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="博客页面" data-src="https://img-blog.csdnimg.cn/20190905193056478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>5）<a href="https://www.cnblogs.com/" target="_blank" rel="noopener">博客园</a></li><li>元老级技术论坛，申请博客需要人工审核（上班时间8分钟通过</li><li>功能：Markdown / 评论 / 标签 / 老式文章管理 / RSS / 年代感皮肤 / 相册 / 文件</li><li>颜值：Logo可以有不止3种Word渐变色3D投影展示，老得有味道<br><img alt="个人主页" data-src="https://img-blog.csdnimg.cn/20190905193214559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="博客页面" data-src="https://img-blog.csdnimg.cn/20190905193224687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></li></ul><h3 id="静态网站生成技术"><a href="#静态网站生成技术" class="headerlink" title="静态网站生成技术"></a>静态网站生成技术</h3><p><strong>技术门槛： Markdown / Linux命令 / git / Github Pages / 域名解析</strong></p><ul><li><p>生成静态网站。文章以特定的标头格式书写，放置在指定的文件夹，执行命令快速生成完整的静态网站；通过git将文件上传至Github或Coding等代码托管平台，这些平台提供免费展示页面功能。</p></li><li><p>快速搭建。静态网站生成的博客很轻，可以绑定自己的域名，适合中小型项目快速建站，省去服务器费用、免去搭建配置服务器等的繁琐过程。官网文档都有详细的教程，配置好所需环境后，理论上搭建一个静态网站到上线只需要输入10多行命令，不熟悉的话一般40分钟左右就可以上线（熟悉的话10分钟），并且这些技术都有贴心的本地预览功能。当然，也正因为轻，没有数据库的支持，所以对于有多图和高清图片、大体量博客等需求实现起来不是非常友好。</p></li><li><p>自定义程度高。静态网站生成技术提供一系列可以配置CSS样式和修改网页行为的方式，有可供选择的大量插件，很容通过插件实现评论、搜索、分析等你想要的所有功能（标配并不带有这些功能）。</p></li><li><p>主题丰富，高颜值。静态网站的主题不是简单的皮肤，而是一个静态网站的解决方案，一般会内置插件并且提供许多实用场景的解决方案，如代码高亮、图像支持等等。</p></li><li><p>技术更新迭代快。静态网站升生成技术相关的讨论很活跃，因此更新维护及时，出现问题比较容易解决。反作用是因为更新换代非常快，而且官网提供各种技术间的快速迁移，所以如果入坑的话比较容易掉入深坑无法自拔，谨慎入坑。</p></li></ul><p>目前比较流行的有jekyll、hugo以及hexo等方式，一般将网站搭在Github Pages或Coding Pages上。通过生成网站搭建博客的方式相对来说有一点点繁琐，因为每次发布文章都需要重新生成，虽然操作很简单（当然可以配置自动化部署），但也是需要那么几步操作。推荐给喜欢新技术，喜欢自定义，不折腾不痛快的人。</p><p>6）<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo</a></p><ul><li>基于Node技术实现快速生成，Github代码库12k+</li><li>安装过程一路流畅，没有波折，配置、发布人性化，十分贴心</li><li>社区活跃，对技术不熟且英文不要的人非常友好</li><li>主题155+，高颜值<br><img alt="官网主页" data-src="https://img-blog.csdnimg.cn/20190905194120106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="官网文档" data-src="https://img-blog.csdnimg.cn/20190905194214188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>7）<a href="https://gohugo.io/" target="_blank" rel="noopener">hugo</a></li><li>基于GO语言实现，极速生成网站，Github代码库11k+</li><li>安装配置十分流畅，但是在部署发布时遇到一点坎坷（需要了解一点Shell脚本</li><li>相对来说中文不是很友好，中文社区不是很活跃</li><li>主题670+，品位和颜值<br><img alt="官网主页" data-src="https://img-blog.csdnimg.cn/20190905194317614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="官网文档" data-src="https://img-blog.csdnimg.cn/20190905194444302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>7）<a href="https://www.jekyll.com.cn/" target="_blank" rel="noopener">jekyll</a></li><li>基础Ruby实现，Github官方推荐亲儿子，Github代码库30k+</li><li>因为有后台，所以可以任性不依赖本地环境配置，直接在网站上生成</li><li>本地环境配置上有一些坑位，高级但是不友好（反正我是踩坑了</li><li>主题只能说正常，总有一种不是官方在维护皮肤的感觉<br><img alt="官网主页" data-src="https://img-blog.csdnimg.cn/20190905194609351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="官网文档" data-src="https://img-blog.csdnimg.cn/20190905194626787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></li></ul><blockquote><p>以上的3种技术的配置流程和搭建思路大同小异，彼此之间都提供低成本迁移办法<br>如果害怕国外服务器大姨妈，以及对于搜索引擎收录有需求的话，建议搭在Coding Pages上，比较省心（会员等级不够高会有广告跳转，解决方式是主页上帮他作广告）<br>如果通过Github托管的话，另外推荐静态网站专业托管平台Netlify，虽然自动编译还有很多坑位，但是可以自动插入HTML代码到post、免费实现https、SSL / TLS等功能、DNS解析等等</p></blockquote><h3 id="内容管理系统"><a href="#内容管理系统" class="headerlink" title="内容管理系统"></a>内容管理系统</h3><p><strong>技术门槛：服务器 / 域名解析 / 数据库 / Linux命令 / ftp</strong></p><ul><li><p>后台管理。具有贴心的后台界面，可以管理文章、相册、主题等。因为有数据库支持，所以可以实现多用户维护管理，高清大图上传等。</p></li><li><p>高级还免费。内置搜索、评论等常用功能，还有丰富的插件市场可以轻松满足各种需求。免费使用系统，但是配置服务器需要支付一定的费用（低配年费要大几百）。</p></li><li><p>丰富与臃肿。如今是用户体验当道和流行扁平化的时代，和往前大而多的需求不太一样，所以现在对于这种臃肿的博客系统是既爱又恨，爱他的丰富，又嫌弃人家的大脑袋。</p></li><li><p>高门槛。搭建一个后台管理式博客系统需要了解比较多的web知识，例如服务器，域名解析，数据库等知识都需要简单了解。虽然各大服务器商均有提供WordPress服务器镜像，可以实现5分钟快速搭建，但是如果不了解一些基本的web知识，会比较容易在搭建和使用过程中摸不着头脑。</p></li></ul><p>9）<a href="https://cn.wordpress.org/" target="_blank" rel="noopener">WordPress</a></p><ul><li>15岁高龄，现在是从php编写到开源后采用各种流行语言重写的第二春</li><li>市场占有率超高的内容管理系统，做博客只是功能之一，搭企业级网站也是很轻松</li><li>中文最友好了，服务器镜像5分钟搭建网站，一键包安装也是轻松带微笑</li><li>颜值中上，形式非常丰富，可以适合各类工种的需求<br><img alt="官网主页" data-src="https://img-blog.csdnimg.cn/2019090519491098.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="官网文档" data-src="https://img-blog.csdnimg.cn/20190905194929897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>10）<a href="https://ghost.org/" target="_blank" rel="noopener">ghost</a></li><li>基于Node实现的，社区活跃度高</li><li>相比WordPress去掉许多臃肿的功能，简洁大气</li><li>专为写作生产力的极致博客系统，WordPress良好替代品</li><li>有一定的搭建门槛，我用一键包也踩了很多坑位，花了90分钟才搭建完成</li><li>颜值是所有例子中最高的，好评<br><img alt="官网主页" data-src="https://img-blog.csdnimg.cn/20190905195006132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><strong>新手村指南。</strong>如果你是新手，对于以上的技术门槛一窍不通，但是又想要主题精美的个人博客网站，建议从Markdown语言开始学起（半天入门，一天出师），之后只需要了解一些基本的命令行知识和git操作，就可以跟随各种教程，从生成静态网站入门快速搭建博客，完全不花钱。<br>个人推荐（良心推荐不收钱）</p><ul><li>首推hexo。性价比最高，中文友好，快速上线，贴心配置，免费高颜值</li><li>其次WordPress。满足多人维护的需求，资料繁多等需求，可以一劳永逸，虽然门槛高一点，体量大了点，还要花钱，但是很稳定，很有安全感。</li><li>个人博客最终选择了hugo + Gihub + Netlify，可以来参考丢鸡蛋</li><li>审美强迫症友情提示：hugo的颜值高于hexo，可以低成本无痛迁移；ghost颜值甩WordPress，为了美需要舍弃一些功能</li></ul>]]></content>
      
      
      <categories>
          
          <category> Summary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> technology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于域名的小知识</title>
      <link href="/2019/09/08/00027/"/>
      <url>/2019/09/08/00027/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="域名解析记录中的各符号"><a href="#域名解析记录中的各符号" class="headerlink" title="域名解析记录中的各符号"></a>域名解析记录中的各符号</h3><p>域名解析是把域名指向网站空间IP，让人们通过注册的域名可以方便地访问到网站一种服务。域名解析也叫域名指向、服务器设置、域名配置以及反向IP登记等等。说得简单点就是将好记的域名解析成IP，服务由DNS服务器完成，是把域名解析到一个IP地址，然后在此IP地址的主机上将一个子目录与域名绑定。</p><ul><li>@ 这个代表不带www的域名 liuxiangyang.space</li></ul><ul><li>*这个是泛解析(包含除liuxiangyang.space外的所有二级域名)</li></ul><ul><li><p>www 表示 <a href="http://www.liuxiangyang.space的解析" target="_blank" rel="noopener">www.liuxiangyang.space的解析</a></p></li><li><p>A (Address) 记录是用来指定主机名（或域名）对应的IP地址记录。</p><p>说明：用户可以将该域名下的网站服务器指向到自己的网络服务器上。同时也可以设置自己域名的二级域名。</p><p><strong>A记录解析</strong></p><p>域名解析记录类型选择“A”；线路类型选择通用或者同时添加三条线路类型为电信、网通、教育网的记录；记录值填写空间商提供的主机IP地址；MX优先级不需要设置；TTL设置默认的3600即可</p><p><strong>CNAME记录解析</strong></p><p>CNAME类型解析设置的方法和A记录类型基本是一样的，其中将记录类型修改为“CNAME”，并且记录值填写服务器主机地址即可。</p><p><strong>泛域名解析</strong></p><p>泛域名解析是指将<em>.域名解析到同一IP。在域名前添加任何子域名，均可访问到所指向的WEB地址。也就是客户的域名ga5.net之下所设的</em>.ga5.net全部解析到同一个IP地址上去。比如客户设**.ga5.net就会自己自动解析到与ga5.net同一个IP地址上去。</p></li></ul><h3 id="www和不加www的区别"><a href="#www和不加www的区别" class="headerlink" title="www和不加www的区别"></a>www和不加www的区别</h3><p>通俗的说，domain.com 是<a href="https://www.baidu.com/s?wd=一级域名&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">一级域名</a>，而在这之前的任何名称，比如 anything.domain.com 都是二级域名。<br>因此实际上，<a href="http://www.domain.com/" target="_blank" rel="noopener">www.domain.com</a> 是域名 domain.com 的一个二级域名，只不过是一个比较特殊的二级域名罢了。他的特殊就在于现在的实践中，人们在<a href="https://www.baidu.com/s?wd=解析域名&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">解析域名</a>的的时候，在惯例和默认的情况下，是把 <a href="http://www.domain.com/" target="_blank" rel="noopener">www.domain.com</a> 这个二级域名指向它的<a href="https://www.baidu.com/s?wd=一级域名&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">一级域名</a> domain.com。<br>因此，现在的大部分情况下，domain.com 和 <a href="http://www.domain.com/" target="_blank" rel="noopener">www.domain.com</a>，都是一样的，有和没有 www 一般没有关系。</p><p>www是主机名，是管理员加上去的，代表访问这个域名即是访问该网站的<a href="https://www.baidu.com/s?wd=万维网服务&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">万维网服务</a>。本来就可以不加啊。主机名也可以写成ftp，代表访问该网站的文件传输服务。添加记录的时候管理员决定的。</p>]]></content>
      
      
      <categories>
          
          <category> Summary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>问题解决-因为你组织的安全策略阻止未经身份验证的来宾访问</title>
      <link href="/2019/09/08/00025/"/>
      <url>/2019/09/08/00025/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>当访问其他电脑共享的文件夹时，弹出下面的问题</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190916092947.png" class="lozad"></p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>此问题需要修改Win10 网络策略</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190916102022.png" class="lozad"></p><p>按window+R键输入gpedit.msc 来启动本地组策略编辑器。<br>依次找到“计算机配置-管理模板-网络-Lanman工作站”这个节点，在右侧内容区可以看到“启用不安全的来宾登录”这一条策略设置。状态是“未配置”。<br>双击“启用不安全的来宾登录”这一条策略设置，将其状态修改为“已启用”并单击确定按钮。<br>设置完成再次尝试访问发现可以正常访问了。</p>]]></content>
      
      
      <categories>
          
          <category> Problem </category>
          
      </categories>
      
      
        <tags>
            
            <tag> system </tag>
            
            <tag> 共享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下使用Github Pages+Hexo搭建博客(详细快捷)</title>
      <link href="/2019/09/08/00012/"/>
      <url>/2019/09/08/00012/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>在互联网渗透到个人，自媒体信息爆炸的今天，大家都希望有一个归自己所有、掌控的<strong>个人博客</strong>。因为无论是记录生活，还是分享技术，自定义博客都可以按照自己的要求，为自己提供熨帖的服务，而不必受到条条框框的限制。但是普通用户又囿于没有高超的编程技术和前端本领，而在自定义博客面前望而却步了。本文的目标就是通过介绍 Hexo+Github/Coding.net+Travis CI+形成一套完整的个人博客自动构建、部署、国内国外双线路负载均衡的系统。真正做到<strong>随时随地写文章，一键部署到网站</strong>的全自动化流水线。</p><blockquote><p><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> 是一个极速、简单且强大的静态博客架构。它使用 Node.js 作为构建引擎，上百个文件在几秒钟内便可构建完成；而且拥有着丰富的插件库，因开源而显得生机勃勃，可扩展性很好；最重要的，它支持 <a href="http://kchen.cc/2015/10/05/Markdown-Manual/#Markdown-简明语法" target="_blank" rel="noopener">Markdown</a> 作为书写语言，极大地方便了博客的撰写。</p></blockquote><p>前面的文章总结了现有的博客类型以及根据现有的情况推荐使用的方式搭建博客。这个时代在发展中，个人也是要有点追求的。使用第三方的博客虽说不用怎么维护，但是这种”寄人篱下”的感觉总归不是太好的，说不定哪一天人家的数据库爆炸服务器没了，咱们的资料可是找不回来的。玩笑归玩笑，主要还是技术需要提升。咱这个最初的阶段(CSDN使用)使用了一段时间了，这里我们进入第二个阶段使用Github Pages+静态网站生成技术搭建博客，静态网站搭建技术也有许多，查阅了资料后较为推荐使用Hexo，当然也可以使用jekyll和hugo。(至于为什么使用Github，当然是因为免费的，可以提供域名让人家能访问到你，如果你有自己的服务器和域名推荐使用更好的方式,例如Wordpress等等)这里总结一下Github Pages+Hexo的方式，中间的很多坑也是搞的自己很头疼，这里也总结出一些容易犯的问题以供参考。好了这里直接进入正题！<br>我们为了更好的记录此次搭建过程，这里分为五个步骤</p><h2 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h2><p>1.浏览器访问GitHub官方网站</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/</span><br></pre></td></tr></table></figure><p><img alt="图一" data-src="https://img-blog.csdnimg.cn/20190907204458414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>进入官网页面之后，写好用户名、邮箱、密码信息，然后点击Sign up for Github。</p><p><strong>此处需要注意：Username、Email和Pssword一定要记住，后边要多次使用，如果太长比较难记，建议最好记在本子上，而且用户名一定要三思，想好之后后面尽量不要改，否则会有麻烦</strong><br>2.注册完登录之后，先选中Unlimited public repositories for free(默认是选中的)，再点击Continue即可。<br><img alt="图二" data-src="https://img-blog.csdnimg.cn/20190907205029416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>接下来，直接点击skip this step<br><img alt="图三" data-src="https://img-blog.csdnimg.cn/20190907205120311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>3.然后如下图所示，先点击头像右边向下的小箭头，再选择Your profile。</p><p><img alt="图四" data-src="https://img-blog.csdnimg.cn/20190906221532506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>然后先点击右上角的“+”，再点击New repository。<br><img alt="图五" data-src="https://img-blog.csdnimg.cn/20190907205408187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>这时会验证你的邮箱，将收到的6位码填入，邮箱通过验证之后，这里需要就要输入新建仓库的信息<br>这里我们输入仓库名，它的写法是这样的,可不要任性去随意定义，就是username.github.io。这里我可吃了亏，否则是会失败的。其他的内容不需要操作，默认的public即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">eg:</span><br><span class="line">Owner:LiuXiangYang-Git</span><br><span class="line">对应的仓库名就是</span><br><span class="line">LiuXiangYang-Git.github.io</span><br></pre></td></tr></table></figure><p><img alt="图六" data-src="https://img-blog.csdnimg.cn/20190907210026248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>恭喜，至此Github注册完成并创建了GitHub Pages个人博客的仓库（Repository）。</p><blockquote><p>关于Github的使用我知道的也不多，这里也就不详细的介绍它了，如果有想要了解的可以自行百度相关教程</p></blockquote><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>Node.js官网下载地址，安装过程没什么可说的，一直点下一步即可。<br><strong>注意要规划好安装的目录，这里我们为了此次教程专门新建一个大的文件夹专门存放此次实践，这也是一个好的习惯！</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nodejs.org/zh-cn/</span><br></pre></td></tr></table></figure><p><img alt="图七" data-src="https://img-blog.csdnimg.cn/20190907210543278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><p><img alt="图八" data-src="https://img-blog.csdnimg.cn/20190906222221735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>安装完成！<br><img alt="图九" data-src="https://img-blog.csdnimg.cn/20190906222354624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>Git官网下载地址，安装过程也是没什么可说的，虽然中间步骤很多要选的选项也是不少，不过我们也是统统Next即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://git-scm.com/downloads</span><br></pre></td></tr></table></figure><p><img alt="图十" data-src="https://img-blog.csdnimg.cn/20190907210953947.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="图十一" data-src="https://img-blog.csdnimg.cn/20190906222733378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>安装完成！<br><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190906222810245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h2 id="Git配置SSH"><a href="#Git配置SSH" class="headerlink" title="Git配置SSH"></a>Git配置SSH</h2><p>1.安装完Git之后，我们需要使用SSH将本地Git项目与远程的GitHub建立联系。<br>这里我们发现Git安装之后会生成两个快捷方式，这里我们需要使用Git Bash<br><img alt="图十二" data-src="https://img-blog.csdnimg.cn/20190907211231554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>点击Git Bash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">依次输入：</span><br><span class="line"></span><br><span class="line">git config --global user.name &quot;Your Username&quot; #要输入你的用户名(Github)</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;Your Email Address&quot; #要输入你的邮箱地址(Github)</span><br></pre></td></tr></table></figure><p><strong>注意这里Your Username和Your Email Address就是注册GitHub账号时的用户名和邮箱。因为使用仓库前，要通过Username和Email标明自己的身份。</strong><br>2.保持刚才的窗口继续输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C &quot;Your Email Address&quot;</span><br></pre></td></tr></table></figure><p><strong>注意在输入cd ~/.ssh时，如果提示：No such file or directory， 说明你是第一次使用Git，没有影响。<br>cd ~/.ssh用来检查本机的ssh密钥，ssh-keygen -t rsa -C “Your Email Address”用于生成新的SSH Key。</strong><br>执行命令之后，出现下面内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line"></span><br><span class="line">Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):</span><br></pre></td></tr></table></figure><p>这里我们直接敲击回车<br>然后会出现提示输入密码<br>Enter passphrase (empty for no passphrase):【输入加密串】【加密串我们看不见，所以你输密码的时候不要以为没输入进去，你直接输入就好，输完密码按回车键确定就行】<br>Enter same passphrase again:【再次输入加密串】<br>如果密码输入不一致，会提示再次输入：<br>Passphrases do not match.  Try again.<br>这个密码会在你提交项目时使用，如果为空的话提交项目时则不用输入。<br>如果出现下图的界面，就说明key生成成功。同时从Your public key has been saved in /c/Users/User/.ssh/id_rsa.pub.能看到ssh key保存的位置。<br><img alt="图十三" data-src="https://img-blog.csdnimg.cn/20190906223319977.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h2 id="添加-SSH-Key-到-GitHub"><a href="#添加-SSH-Key-到-GitHub" class="headerlink" title="添加 SSH Key 到 GitHub"></a>添加 SSH Key 到 GitHub</h2><p>1.继续返回到我们的Github网站中，按照顺序点击右上角的头像-Settings-SSH and GPG keys -New SSH key<br><img alt="图十四" data-src="https://img-blog.csdnimg.cn/20190907212544335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>2.然后使用Notepad++打开本地id_rsa.pub文件，也就是刚才生成的SSH key。如果看不到这个文件，需要设置显示隐藏的文件。将本地文件里的SSH key全选复制粘贴到刚刚GitHub上通过New SSH key创建的key方框里，Title随便写或者直接空着不写也可以，直接点击Add SHH key就好了。<br><img alt="图十五" data-src="https://img-blog.csdnimg.cn/20190906223623254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="图十六" data-src="https://img-blog.csdnimg.cn/20190907212821133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>3.在GitHub添加SSH key之后，我们需要测试是否添加成功，输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>，如果出现下图的问题，没关系直接输入yes即可！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &apos;github.com (192.30.255.113)&apos; can&apos;t be established.</span><br><span class="line"></span><br><span class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span><br><span class="line"></span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br><span class="line">输入yes之后输入我们项目的密码</span><br><span class="line">nter passphrase for key &apos;/c/Users/User/.ssh/id_rsa&apos;:【这里的密码也是加密串】</span><br></pre></td></tr></table></figure><p><img alt="图十七" data-src="https://img-blog.csdnimg.cn/20190906224133188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>4.当系统出现如下提示时，说明成功了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi HandsomeSuperRed! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>刚才的准备工作做了一大堆，也没有看到实在的东西，这里我们进行到这一步就可以有本地的博客了。开始喽！<br>1.首选安排好你的博客安装路径，在此路径右击找到GitBash,例如我们的目录为<br>D:\Myblog\Blog，右击Git Bash Here</p><p><img alt="图十八" data-src="https://img-blog.csdnimg.cn/20190907215109786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>2.打开Git Bash以后输入npm install -g hexo-cli安装Hexo，<br>安装好以后不要关闭Git Bash，接下来还要用。Hexo有它的默认路径，能够看到Hexo都安装在了C盘。<br><img alt="图十九" data-src="https://img-blog.csdnimg.cn/2019090622550584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h2 id="Hexo部署"><a href="#Hexo部署" class="headerlink" title="Hexo部署"></a>Hexo部署</h2><p>1.安装好hexo之后，我们需要执行下面三条命令进行初始化工作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt; #初始化hexo(是你要保存博客内容的文件夹的名字。)</span><br><span class="line"></span><br><span class="line">cd &lt;folder&gt; #进入此目录</span><br><span class="line"></span><br><span class="line">npm install #安装</span><br></pre></td></tr></table></figure><p>其中，<folder></folder></p><p>例如我想将博客保存在Hexo目录中，那我就使用hexo init Hexo命令。如果你不想用Hexo命名，你想将文件夹叫做Handsome，那你可以使用Hexo init Handsome命令。所以上面三个命令就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo init Hexo</span><br><span class="line"></span><br><span class="line">cd Hexo</span><br><span class="line"></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>执行命令的界面所示<br><img alt="图二十" data-src="https://img-blog.csdnimg.cn/20190906225518629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="图二十一" data-src="https://img-blog.csdnimg.cn/20190906225616402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>2.三条命令执行过后，看一下我们刚才Hexo的目录内容，其中_config.yml文件是我们用的比较多的配置文件<br><img alt="图二十二" data-src="https://img-blog.csdnimg.cn/20190907215821837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>3.Hexo初始化之后，我们需要部署并且开启服务，执行下面三条命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line">hexo deploy </span><br><span class="line"></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>效果如下图所示<br><img alt="图二十三" data-src="https://img-blog.csdnimg.cn/20190906225908611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br><img alt="图二十四" data-src="https://img-blog.csdnimg.cn/20190906225842158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>4.然后系统会出现如下提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line"></span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>浏览器访问<a href="http://localhost:4000/，发现Hexo在本地已经部署好了！" target="_blank" rel="noopener">http://localhost:4000/，发现Hexo在本地已经部署好了！</a><br><img alt="图二十五" data-src="https://img-blog.csdnimg.cn/20190906225952351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h2 id="将本地文件-Hexo-部署至Github"><a href="#将本地文件-Hexo-部署至Github" class="headerlink" title="将本地文件(Hexo)部署至Github"></a>将本地文件(Hexo)部署至Github</h2><p>1.找到我们上面说的Hexo的配置文件<br><img alt="图二十六" data-src="https://img-blog.csdnimg.cn/20190907221038552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>使用工具打开进行编辑，找到deploy一项<br>修改成如图所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:LiuXiangYang-Git/LiuXiangYang-Git.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><img alt="图二十七" data-src="https://img-blog.csdnimg.cn/20190907221131330.png" class="lozad"><br><strong>注意这里的repo需要进行修改更改成自己的地址，获取方式如下，将其复制到type后面即可，还有一个需要注意的地方是冒号后面一定要加空格，否则部署会失败</strong></p><p><img alt="图二十八" data-src="https://img-blog.csdnimg.cn/20190906231804490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>2.更改完之后保存，这里我们就可以使用hexo命令发布到仓库中了，还是同样的命令(发布到本地)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p><img alt="图二十九" data-src="https://img-blog.csdnimg.cn/20190906232127502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>如果出现下面的提示恭喜你成功了！<br><img alt="图三十" data-src="https://img-blog.csdnimg.cn/20190907221610305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>3.这时就已经部署到 GitHub 上了，可以到你的GitHub仓库查看是否已经更新。<br><img alt="图三十一" data-src="https://img-blog.csdnimg.cn/20190907221816534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>4.成功之后，这个地址就是我们的博客域名了，可以使用他来访问你的博客，当然如果你有自己的博客，也可以修改成自己的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://liuxiangyang-git.github.io/</span><br></pre></td></tr></table></figure><p>只要将一级域名更改成你的账户名即可！<br><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190907221847702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br>5.后面教程我们在详细实践如何自定义网站内容，我也是在摸索后面持续更新。。。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>一顿操作下来虽然有点儿累，但看见拥有了自己的博客还是非常有成就感的，人生就是需要折腾，那么现在就开始你的创作之旅吧！文章的不断积累，你会从中受益很多的！</p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用手机方便的控制个人电脑</title>
      <link href="/2019/09/08/00024/"/>
      <url>/2019/09/08/00024/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><p>这个教教大家用手机连接电脑的方法，手机端和电脑端都下载相同的远程软件，例如Teamviewerr，将电脑端的id和密码输入即可进入</p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/20190912132632.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/LiuXiangYang-Git/cloudimg/master/img/02ebe134d577d506b011c68140a4866.png" class="lozad"></p><p>还有进阶级操作，配合远程开机软件，你可以在任意的一个地方随时控制你的电脑，文件传输，远程控制你的电脑，远程投送你的屏幕,魔兽远程排队等等！</p><h3 id="推荐软件"><a href="#推荐软件" class="headerlink" title="推荐软件"></a>推荐软件</h3><h5 id="1-向日葵"><a href="#1-向日葵" class="headerlink" title="1.向日葵"></a>1.向日葵</h5><p>远程控制软件，优秀的国产代表，由上海贝瑞科技公司出品。</p><h5 id="2-Teamviewer"><a href="#2-Teamviewer" class="headerlink" title="2.Teamviewer"></a>2.Teamviewer</h5><p>老牌的远程控制软件了，相信大家应该接触过。</p><h5 id="3-AnyDesk"><a href="#3-AnyDesk" class="headerlink" title="3.AnyDesk"></a>3.AnyDesk</h5><p>2014年成立于德国，全球使用客户超过8000万。</p>]]></content>
      
      
      <categories>
          
          <category> Window </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 远程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人快速搭建Wordpress建站教程(博客用途)</title>
      <link href="/2019/09/03/00020/"/>
      <url>/2019/09/03/00020/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a><a href></a>简言</h3><p> 在初步了解了Wordpress之后，我们这里来尝试搭建一下Wordpress。其实这个相比于其他的搭建博客方式算是比较简单的了。像使用hexo+github搭建的方式使用的人也很多，这些方式还需要了解一些基本的命令行知识和git操作。来来来，话不多说这里我们一步一步记录我们的实践教程。<br> 了解Wordpress</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/liuxiangyang_/article/details/100527670</span><br></pre></td></tr></table></figure><h3 id="一、准备开始工作"><a href="#一、准备开始工作" class="headerlink" title="一、准备开始工作"></a><a href></a>一、准备开始工作</h3><p> 1.准备一台服务器或者个人虚拟机<br> 我们这里使用的是Centos7.6的linux系统，安装Min模式或者Server都可以(建议大家选用阿里云的服务器，云主机)如果大家有在阿里 的云主机，推荐大家访问这篇文章<br> <a href="https://yq.aliyun.com/articles/221634。阿里有一键安装LNMP或者LAMP的安装件使用起来很方便不过是收费的。" target="_blank" rel="noopener">https://yq.aliyun.com/articles/221634。阿里有一键安装LNMP或者LAMP的安装件使用起来很方便不过是收费的。</a><br> 这里我们已经配置好服务器的网络以及IP地址:192.168.43.31(内网地址)用SSH工具连接进去<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190903213531306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 2.将服务器的yum源更换为阿里云的，这样使用起来就方便了许多</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p> 3.搭建LNMP组合，当然了也可以使用LAMP组合，不过下面的步骤可就不一样了<br> 安装nginx，sql, php<br> <strong>NGINX</strong><br> 手动添加nginx的rpm包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br></pre></td></tr></table></figure><p> 添加好之后安装nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure><p> <strong>PHP</strong><br> 安装php之前先得更新一下php的rpm包，因为一般情况下，操作系统里默认的php的rpm包版本都比较老。我之前装的是5.4.16，但是最新版本的wordpress5.2.2要求的php版本是5.6.20以上。（如果php的版本不对，会在打开安装好的wordpress时，报错误的)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br></pre></td></tr></table></figure><p> 添加好之后安装php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install php70w-fpm php70w-mysql -y</span><br></pre></td></tr></table></figure><p> <strong>MYSQL</strong><br> 这里我们到了LNMP的最后一个了就是装数据库，原先的mysql已经被mariadb代替，所以不用多想，一条命令快速安装mariadb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mariadb-server -y</span><br></pre></td></tr></table></figure><p> 启动数据库服务(mariadb)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb</span><br></pre></td></tr></table></figure><p> 连接数据库，直接mysql无密码进入<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190903220106437.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 创建wordpress用的数据库。名字你可以自行决定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database wordpress_db;</span><br></pre></td></tr></table></figure><p> 给新建的数据库设置用户名和密码。我这里设置的是wp_account和wordpress_password，你也可以自行调整。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on wordpress_db.* to wp_account@localhost identified by &apos;wordpress_password&apos;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h3 id="二、主角Wordpress登场"><a href="#二、主角Wordpress登场" class="headerlink" title="二、主角Wordpress登场"></a><a href></a>二、主角Wordpress登场</h3><p> 1.这里我们安装最新的Wordpress，去官网下载最新的版本，使用wget命令下载到/usr/local/src/目录下面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://cn.wordpress.org/latest-zh_CN.tar.gz</span><br></pre></td></tr></table></figure><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190903220755989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 2.这里我们养成良好的文件目录放置习惯，避免文件过乱找不到东西。在根目录创建一个www的文件夹存放wordpress的解压文件。这个目录我们要记住的，后面nginx的配置需要这个目录的(/www/wordpress/)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /www</span><br><span class="line">tar xf latest-zh_CN.tar.gz</span><br><span class="line">mv wordpress/ /www/wordpress</span><br></pre></td></tr></table></figure><p> 3.修改Wordpress的配置文件<br> 默认的配置文件只有wp-config-sample.php，我们需要从它复制一个wp-config.php出来，这才是真正的配置文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /www/wordpress</span><br><span class="line">cp wp-config-sample.php wp-config.php</span><br><span class="line">vi wp-config.php</span><br></pre></td></tr></table></figure><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190903221400890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 打开wp-config.php之后，找到文本内容中下面的位置。把上面修改的数据库信息填上。(只需要修改这三项即可，记住不要将数据写错了，否则数据库会连不上报错的)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/** WordPress数据库的名称 */</span><br><span class="line"></span><br><span class="line">define(&apos;DB_NAME&apos;, &apos;wordpress_db&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/** MySQL数据库用户名 */</span><br><span class="line"></span><br><span class="line">define(&apos;DB_USER&apos;, &apos;wp_account&apos;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/** MySQL数据库密码 */</span><br><span class="line"></span><br><span class="line">define(&apos;DB_PASSWORD&apos;, &apos;wordpress_password&apos;);</span><br></pre></td></tr></table></figure><h3 id="三、Nginx配置-重要"><a href="#三、Nginx配置-重要" class="headerlink" title="三、Nginx配置(重要)"></a><a href></a>三、Nginx配置(重要)</h3><p> 1.修改nginx的配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p> 把wordpress网站相关的信息配置进去。这里给大家提供我的配置文件当做参考。<br> 注意你们只要修改两个地方(下方配置文件的两个注释)。</p><p> A:你的服务器的ip地址</p><p> B:你的Wordpress的文件目录<br> 如果你没有创建新的目录存放wordpress根目录的话，按照我们上述的操作来的话就是<br> /www/wordpress/<br> <strong>nginx.conf</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">user root;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  192.168.43.31;  #你的服务器的IP地址</span><br><span class="line">        index index.html index.php; </span><br><span class="line">        root /www/wordpress;        #wordpress的路径(网站根目录)</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"> </span><br><span class="line">        location / &#123;</span><br><span class="line">            root /www/wordpress;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、大功告成"><a href="#四、大功告成" class="headerlink" title="四、大功告成"></a><a href></a>四、大功告成</h3><p> 这里我们将所有安装的服务开启即可访问我们搭建的Wordpress了。是不是有点小激动，哈哈<br> 万事俱备，只欠东风，这里我们将服务全部开启一下<br> 开启命令收下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb #开启数据库</span><br><span class="line">service php-fpm start  #开启php</span><br><span class="line">nginx  #开启nginx</span><br></pre></td></tr></table></figure><p> 检查是否起来,还记得我们前面所说的查看一个应用是否已经起来，有两种方式一种是通过进程，一种是通过端口来看。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这里我们将查询的进程过滤掉</span><br><span class="line">ps aux | grep nginx | grep -v grep</span><br><span class="line">ps aux | grep mariadb | grep -v grep</span><br><span class="line">ps aux | grep php | grep -v grep</span><br></pre></td></tr></table></figure><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190903222752558.png" class="lozad"><br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190903222833224.png" class="lozad"><br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190903222928303.png" class="lozad"><br> 这里我们访问服务器的IP地址，即可看到一个欢迎界面<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190903223328704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 将账户密码邮箱等信息配置之后，即可点击安装喽！等待一小会就会自动生成一个网站了<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190903223457120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2019090322350599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 后面文章教教大家如何使用Wordpress，这篇文章就记录到此。</p>]]></content>
      
      
      <categories>
          
          <category> WordPress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人建站工具Wordpress学习</title>
      <link href="/2019/09/03/00019/"/>
      <url>/2019/09/03/00019/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简单了解"><a href="#简单了解" class="headerlink" title="简单了解"></a><a href></a>简单了解</h3><p> WordPress是使用PHP语言开发的博客平台，用户可以在支持PHP和MySQL数据库的服务器上架设属于自己的网站。是一个免费的开源项目，在GNU通用公共许可证下授权发布。<br> 【Wordpress程序】 相当于家的主体框架。<br> 【Wordpress模板】 相当于家的装修。<br> 【Wordpress插件】 相当于家的书房，健身房等不同功能的房间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">收集的资料地址请收好</span><br><span class="line">https://cn.wordpress.org/ #Wordpress官网地址</span><br><span class="line">http://www.yzipi.com/wordpress  #Wordpress主题模板风格教程下载</span><br><span class="line">https://www.wpdaxue.com/ #wordpress大学，专注于WordPress建站教学和WordPress资源分享，</span><br><span class="line">让每个人都能用好WordPress！</span><br></pre></td></tr></table></figure><p> <img alt="WordPress" data-src="https://img-blog.csdnimg.cn/20190903210728193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h3 id="Wordpress是什么？"><a href="#Wordpress是什么？" class="headerlink" title="Wordpress是什么？"></a><a href></a>Wordpress是什么？</h3><p> WordPress是基于Php语言+ Mysql数据库开发的网站程序，程序前期主要定位个人博客（BLOG），随着后续功能的升级，现在有不少人当作一个内容管理系统（CMS）使用。</p><h3 id="Wordpress主题模板是什么？"><a href="#Wordpress主题模板是什么？" class="headerlink" title="Wordpress主题模板是什么？"></a><a href></a>Wordpress主题模板是什么？</h3><p> WordPress主题模板是基于Wordpress程序的基础上，用 Html+css+js开发设计的一套皮肤。</p><h3 id="Wordpress插件是什么？"><a href="#Wordpress插件是什么？" class="headerlink" title="Wordpress插件是什么？"></a><a href></a>Wordpress插件是什么？</h3><p> WordPress插件是基于Wordpress程序的基础上，扩展Wordpress功能的组件。如果我想要一个问卷功能，你可以安装相关的Wordpress表单组件。</p><h3 id="Wordpress的优点"><a href="#Wordpress的优点" class="headerlink" title="Wordpress的优点"></a><a href></a>Wordpress的优点</h3><p> 全球33%的网站都是基于Wp程序构建的。<br> 自2003年第一个版本发布以来，团队已经持续发展了17年，在安全性和易用性方面都非常成熟。<br> WordPress拥有的模板和插件资源在网络上的资源是最多的，不信可以百度一下。</p><h3 id="Wordpress可以用来做什么？"><a href="#Wordpress可以用来做什么？" class="headerlink" title="Wordpress可以用来做什么？"></a><a href></a>Wordpress可以用来做什么？</h3><p> 博客，网店，论坛社区，新闻咨讯，企业网站（产品，教育，医疗….)等。只要想得出，基本都可以用Wordpress。那怕现在腾讯，百度，阿里也有不少网站和博客都是基于Wordpress构建的。</p>]]></content>
      
      
      <categories>
          
          <category> WordPress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为交换机如何设置静态路由</title>
      <link href="/2019/08/30/00028/"/>
      <url>/2019/08/30/00028/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>   1.登陆交换机，进入管理视图 system-view。<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190830104834253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 2.先确认当前配置里面是否有静态路由<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190830104908615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 3.然后就可以配置静态路由了，这条的意思就是到192.168.43.0/24这个段的访问地址是10.1.21.254。<br> 命令总结</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sy</span><br><span class="line">dis cur</span><br><span class="line">ip route-static 192.168.43.0 255.255.255.0 10.1.21.254</span><br></pre></td></tr></table></figure><p> 4.退出到视图中去保存<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190830105243119.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 5.当然了图形化界面的配置就比较简单了，找到网络配置中的路由配置然后设置静态路由<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190830105435683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><p>   6.如何删除配置好的路由</p><p>在配置的路由前面加undo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">undo ip rout 。。。。。。。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交换机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>下载纯净系统并且制作启动盘快速重装系统（家庭备用）</title>
      <link href="/2019/08/24/00026/"/>
      <url>/2019/08/24/00026/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a><a href></a>简言</h3><p> 生活中我们的电脑在用了一段时间之后会出现蓝屏卡顿等情况，这个时候首选的解决方案肯定是重装系统了。网上有很多一键重装系统的工具，良莠不齐。使用起来会有很多的问题，在文章的下面会详细讲到。下面就教教大家如何下载纯净的系统并且自己去重装系统，这样就不用去花钱去店里找专业师傅重装系统了,而且启动盘做好了可以备用，以后一家人电脑再出现问题，轻松搞定！</p><h3 id="一、下载系统"><a href="#一、下载系统" class="headerlink" title="一、下载系统"></a><a href></a>一、下载系统</h3><p> 1.第一步我们需要去寻找资源，网上有很多，我在百度中摸索了很长时间，比较了很多的资源发现了一个非常好的下载站点，MSDN。基本上第一时间更新微软的各种系统以及软件工具，包括最常用的Windows和Office。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://msdn.itellyou.cn/</span><br></pre></td></tr></table></figure><p> 2.下面是网站的主界面<br> <img alt data-src="https://img-blog.csdnimg.cn/2019082415371824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 3.然后点击操作系统，这里根据自己的需求去下载对应的系统，我这边下载常用的Win10。<img alt data-src="https://img-blog.csdnimg.cn/20190824153919386.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 4.点击之后右边会出来win10的版本，我们选择64位和Consumer editions的家庭版<br> Consumer editions包括：家庭版、教育版、专业版；<br> Business editions包括：企业版、教育版、专业版<img alt data-src="https://img-blog.csdnimg.cn/20190824154054721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 5.然后复制下面的链接去迅雷新建任务就可以下载了。<img alt data-src="https://img-blog.csdnimg.cn/20190824154216291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> <img alt data-src="https://img-blog.csdnimg.cn/20190824155022282.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> <img alt data-src="https://img-blog.csdnimg.cn/20190824155007417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h3 id="二、制作启动盘"><a href="#二、制作启动盘" class="headerlink" title="二、制作启动盘"></a><a href></a>二、制作启动盘</h3><p> 1.系统下载好了之后，我们就要制作启动盘了。我们需要准备一个U盘，最好是8G以上的。下面一步一步教你如何制作启动盘。<br> 用于制作启动启动盘的工具有很多，这里我接触linux比较多，所以使用的是Pendrivelinux。也推荐大家使用WinPE工具箱。</p><blockquote><p>Pendrivelinux是一款通过可移动的USB设备轻松运行Linux系统的工具。无论使用windows系统的用户，还是已经安装Linux的用户，可在不损害原有系统的前提下，尝试Linux各种发行版本。方法之一即为使用Live USB。<br> Pendrivelinux是创建Live USB最流行的工具之一，Pendrivelinux支持不同的Linux发行版本。但是有一点，Pendrivelinux只支持Windows操作系统。<br> Pendrivelinux是一个开源免费的快速制作 U 盘系统启动盘和格式化 USB 的实用小工具，支持 Windows 或 Linux 启动，无需安装而且大小不到1M，在速度上也比同类型大多数工具要快。</p><p> 网上的一键重装系统的工具使用会出现的问题<br> 我之前制作U盘启动盘使用的软件是老毛桃，刚开始感觉挺方便,使用也很简单。但之后就发现问题了,这东西制作的系统U盘启动盘不干净！！不干净！！不干净！！会出现下面的问题<br> 1.网页莫名会被篡改<br> 2.IE浏览器的收藏栏会出现很多网站<br> 3.强制下载一堆乱七八糟的软件<br> 4.还有一些其他问题我就不列举了,总之一句话:不干净！！<br> 刚开始我以为是使用的系统不是纯净版的，后来用了同学的官网原生系统再次做了一个老毛桃去重装系统发现还是老样子。到头来才发现不管你是不是纯净版的系统，只要你使用老毛桃或者其他的工具制作的启动盘都会出现上述的问题。搞得我也不相信什么老毛桃大白菜等等了。所以也不推荐大家使用这些工具！</p></blockquote><p> 2.工具的下载地址以及官网图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/</span><br></pre></td></tr></table></figure><p> <img alt data-src="https://img-blog.csdnimg.cn/20190824161509192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 3.这里我们选择UUI(通用USB安装程序)，下载工具，很小且不用安装<br> <img alt data-src="https://img-blog.csdnimg.cn/20190824161543613.png" class="lozad"><img alt data-src="https://img-blog.csdnimg.cn/20190824161932532.png" class="lozad"><br> 4.下载好之后我们双击工具，下面的图很清楚总共三步<br> Step1：选择系统<br> Step2:选择下载好的Win10镜像<br> Step3：选择U盘，尽量8G以上。我们选择NTFS的分区格式</p><blockquote><p>NTFS分区是比FAT32更新版本的分区格式，因此NTFS格式分区相比FA32分区具有更强大的功能，如可以将每个磁盘分更大空间，拥有更高的安全属性等。<br> 对用户影响最大的是FAT32的硬盘格式并不能支持4GB以上的文件,而现在的很多应用程序以及游戏大作都超过了4GB容量，因此用户必须将大程序安装的磁盘改成NTFS格式。</p><p> <img alt data-src="https://img-blog.csdnimg.cn/20190824170036344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 5.大约等个半小时至一个小时就完成了启动盘的制作<br> <img alt data-src="https://img-blog.csdnimg.cn/20190824175650548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p></blockquote><h3 id="三、重装系统"><a href="#三、重装系统" class="headerlink" title="三、重装系统"></a><a href></a>三、重装系统</h3><p> 1.这里正好我一个同事要我帮他重装系统，是一台联想电脑。重装之前充满电，将制作好的启动盘插入。联想电脑的按键是F12或者Fn+F12,开机快速按键进入BIOS设置页面（引导菜单）<br> 选择USB HDD<br> <img alt data-src="https://img-blog.csdnimg.cn/20190824180952807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 2.进入安装界面，下一步选择安装版本，这里我们安装家庭版<img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190824181031566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 3.我们选择自定义安装，这里我分了四个盘，并且分好空间<br> <img alt data-src="https://img-blog.csdnimg.cn/20190824181152209.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><blockquote><p>升级安装：指保留原操作系统下的应用程序将操作系统升级，在升级的过程中，将会按照微软集团原定义中的升级模式进行安装，升级之后不会格式化磁盘，除操作系统外，以前的文件在升级安装后都可以保留，只是应用程序兼容性的改变可能会使你原来安装的某些程序不可用，而一些不在微软集团数据迁移模式中的文件，在升级的过程中，会被win7版操作系统直接舍弃掉。<br> 自定义安装：是指用户可以自定义安装操作系统的磁盘分区，是否联机安装等等，关于很多升级的设置是需要自己手动设置的，如果选择自定义安装的话在数据迁移的过程中，win7版操作系统用户可以依照自己的选择进行数据迁移，安装过程中可能会丢失安装盘原来的数据。<br> 两种升级方法各有各的好处，但是要视实际情况而定了，不过如果win7用户在进行升级的过程中，需要迁移的数据比较多而且繁杂的话，建议选择自定义的升级模式，这样在数据迁移的过程中，就会更加的方便了。</p><p> 4.点击完成，等待安装结束，剩下的步骤就是按照自己的需求进行设置了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Window </category>
          
      </categories>
      
      
        <tags>
            
            <tag> system </tag>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux之镜像下载</title>
      <link href="/2019/08/20/00031/"/>
      <url>/2019/08/20/00031/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="官网下载"><a href="#官网下载" class="headerlink" title="官网下载"></a>官网下载</h2><p> 官网地址：<a href="https://www.centos.org/download/" target="_blank" rel="noopener">https://www.centos.org/download/</a><br> 此种下载方式不太建议，一方面下载速度慢另一方面提供的版本不多<br> <img alt data-src="https://img-blog.csdnimg.cn/2019082017053376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h2 id="国内镜像网站下载"><a href="#国内镜像网站下载" class="headerlink" title="国内镜像网站下载"></a>国内镜像网站下载</h2><p> 1.这个网站适合下载现行通用的大版本，比如Centos6和7系列的。其他的历史版本在另外一个网站里面，这里先介绍下通用的版本<br> <a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">https://opsx.alibaba.com/mirror</a><br><img alt data-src="https://img-blog.csdnimg.cn/20190820171024245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 2.这里会显示很多历史版本<br> <img alt data-src="https://img-blog.csdnimg.cn/20190820170724872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 3.这里我们只能选择比较新的版本去下载，例如：7.0系列的。其他的目录下面是指向历史仓库<br> 这里我们选择7.6版本，并点开isos目录<br> <img alt data-src="https://img-blog.csdnimg.cn/20190820171115400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 4.接下来我们选择需要的系统位数，一般来说选择x86_64位的,不过这里也没有别的<br> <img alt data-src="https://img-blog.csdnimg.cn/20190820171157575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 5.下面是最重要的文件选择，我们选择CentOS-7-x86_64-Everything-1810.torrent 中这个文件，这是一个种子文件，而且非常小，我们把它下载下来之后就可以使用迅雷等工具来对源镜像进行下载了<br> 如果不想使用迅雷下载，也可以点击上面的ISO直接下载，不过确实比较大！而且容易出现下面这个问题。<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/201908202033381.png" class="lozad"><br> <img alt data-src="https://img-blog.csdnimg.cn/20190820203814348.png" class="lozad"><br> <img alt data-src="https://img-blog.csdnimg.cn/20190820171334515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 6.下载完成之后会生成如下的几个文件，CentOS-6.9-x86_64-bin-DVD1就是我们在工作中使用的镜像了，镜像DVD2的里面东西比较少，不推荐使用！<br> 7.Unbutu下载地址<br> ubuntu 14.04：<br> <a href="http://mirrors.aliyun.com/ubuntu-releases/14.04/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu-releases/14.04/</a><br> ubuntu 16.04：<br> <a href="http://mirrors.aliyun.com/ubuntu-releases/16.04/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu-releases/16.04/</a><br> ubuntu 18.04：<br> <a href="http://mirrors.aliyun.com/ubuntu-releases/18.04/" target="_blank" rel="noopener">http://mirrors.aliyun.com/ubuntu-releases/18.04/</a><br> <em>历史版本下载</em><br> 8.官网地址：<a href="http://vault.centos.org/" target="_blank" rel="noopener">http://vault.centos.org/</a><br> 点击进去和上面的方法类似。<br> <img alt data-src="https://img-blog.csdnimg.cn/20190820204311308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 这个网站其实是我通过其他版本下面的readme.txt找到的，这里面有详细的介绍！<img alt data-src="https://img-blog.csdnimg.cn/20190820204450890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> image </tag>
            
            <tag> resource </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux之Centos下配置Nginx反向代理负载均衡集群</title>
      <link href="/2019/08/19/00009/"/>
      <url>/2019/08/19/00009/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="一，实验介绍"><a href="#一，实验介绍" class="headerlink" title="一，实验介绍"></a><a href></a>一，实验介绍</h3><p> 负载均衡群集有很多，咱们这里了解一下基于nginx搭建tomcat8.0(版本)的负载均衡群集管理<br> (负载均衡顾名思义就是将多个请求分发到不同的服务上，实现均衡的负载，减小单个服务的压力)<br> 利用三台centos7虚拟机搭建简单的nginx反向代理负载集群，</p><p> 实验环境准备<br> 三台centos7虚拟机，一台本地电脑<br> 192.168.4. 223 nginx负载均衡器</p><p> 192.168.43.31 web01服务器</p><p> 192.168.43.32 web02服务器</p><p> 192.168.143.129 WIN10的终端电脑 (用户)</p><p> 软件准备：</p><p> centos7.4 x86_64</p><p> nginx-1.6.3.tar.gz</p><p> apache-tomcat-8.5.43.tar.gz</p><h3 id="二，192-168-4-223负载均衡器搭建"><a href="#二，192-168-4-223负载均衡器搭建" class="headerlink" title="二，192.168.4. 223负载均衡器搭建"></a><a href></a>二，192.168.4. 223负载均衡器搭建</h3><p> 1.安装nginx软件<br> 教程地址：<a href="https://blog.csdn.net/liuxiangyang_/article/details/99680571" target="_blank" rel="noopener">https://blog.csdn.net/liuxiangyang_/article/details/99680571</a><br> 2.修改配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    upstream nginxDemo&#123;  //定义服务池的名称</span><br><span class="line">        server 192.168.43.31:8080 weight=1;</span><br><span class="line">        server 192.168.43.32:8080 weight=1;  //地址指向两台tomcat服务器，权重为1</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://nginxDemo; //添加调用服务池</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">检查语法是否有错误</span><br><span class="line">/usr/local/nginx/sbin/nginx -t</span><br><span class="line">更多的nginx命令参考下面的文章</span><br><span class="line">https://blog.csdn.net/liuxiangyang_/article/details/97266415</span><br></pre></td></tr></table></figure><h3 id="三、192-168-43-31-web01服务器192-168-43-32-web02服务器搭建"><a href="#三、192-168-43-31-web01服务器192-168-43-32-web02服务器搭建" class="headerlink" title="三、192.168.43.31 web01服务器192.168.43.32 web02服务器搭建"></a><a href></a>三、192.168.43.31 web01服务器192.168.43.32 web02服务器搭建</h3><p> 我们这里使用的是Tomcat服务器，将两台虚拟机部署好项目<br> 安装JDK、安装tomcat8<br> 教程地址：<br> 安装tomcat <a href="https://blog.csdn.net/liuxiangyang_/article/details/99676398" target="_blank" rel="noopener">https://blog.csdn.net/liuxiangyang_/article/details/99676398</a><br> 发布项目 <a href="https://blog.csdn.net/liuxiangyang_/article/details/99692118" target="_blank" rel="noopener">https://blog.csdn.net/liuxiangyang_/article/details/99692118</a><br> 这里的tomcat的项目我用的是我之前写的，如果大家没有的话可以使用下面的方法建立一个小的Demo</p><h3 id="四、测试访问"><a href="#四、测试访问" class="headerlink" title="四、测试访问"></a><a href></a>四、测试访问</h3><p> 我们使用win10客户机去访问nginx调度服务器的IP地址，查看是否能实现负载均衡<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190819145849472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 这里我们点击刷新，就会发现浏览器在两个Tomcat发布的项目之间跳转。<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190819150008146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 到这里就说明我们的此次实验成功了，使用nginx搭建负载均衡其实主要原理就是利用upstream和proxy_pass。希望能给大家带来帮助！</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 负载均衡 </tag>
            
            <tag> 反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx反向代理之了解Tomcat，Nginx，Apache的区别</title>
      <link href="/2019/08/10/00010/"/>
      <url>/2019/08/10/00010/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>  1.nginx常用做静态内容服务和代理服务器，直接外来请求转发给后面的应用服务器（tomcat，Django等），tomcat更多用来做一个应用容器，让java web app放在里面。</p><p> 严格意义上来讲，Apache和nginx应该叫做HTTP Server，而tomcat是一个Application Server是一个Servlet/JSO应用的容器。<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190810093540879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 客户端通过HTTP Server访问服务器上存储的资源（HTML文件，图片文件等），HTTP Server是中只是把服务器上的文件如实通过HTTP协议传输给客户端。<br> 注意：nginx只是把请求做了分发，不做处理！！！</p><p> 2.而tomcat(应用服务器)，则是一个应用执行的容器。它首先需要支持开发语言的 Runtime（对于 Tomcat 来说，就是 Java），保证应用能够在应用服务器上正常运行。应用服务器往往是运行在HTTP Server的背后，执行应用，将静态的内容转化为动态的内容之后，通过HTTP Server分发到客户端<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190810093756495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad">  </p><ol start="3"><li><p>nginx和Apache的区别</p><p>所以Apache和Nginx是一类的，tomcat等应用服务器是一类的。下面说一下Apache和Nginx的区别(引用)</p></li></ol><blockquote><p>Apache是同步多进程模型，一个连接对应一个进程，而nginx是一步的，多个连接（万级别）可以对应一个进程。<br> nginx轻量级，抗并发，处理静态文件好<br> Apache超稳定，对PHP支持比较检单，nginx需要配合其他后端用，处理动态请求有优势<br> 建议使用前端nginx抗并发，后端apache集群，配合起来会更好</p><p> 下面我会部署一套Nginx的反向代理服务器用来做负载均衡分发请求，相应教程也会总结。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> summary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux之Centos安装Nginx做TCP代理(端口转发)</title>
      <link href="/2019/08/09/00008/"/>
      <url>/2019/08/09/00008/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h3><p>  nginx在1.9版本之后可以充当端口转发的作用，即：访问该服务器的指定端口，nginx就可以充当端口转发的作用将流量导向另一个服务器，同时获取目标服务器的返回数据并返回给请求者。nginx的TCP代理功能跟nginx的反向代理不同的是：请求该端口的所有流量都会转发到目标服务器，而在反向代理中可以细化哪些请求分发给哪些服务器；另一个不同的是，nginx做TCP代理并不仅仅局限于WEB的URL请求，还可以转发如memcached、MySQL等点到点的请求.。<br> 实现步骤如下：</p><h4 id="一、安装nginx的依赖库"><a href="#一、安装nginx的依赖库" class="headerlink" title="一、安装nginx的依赖库"></a><a href></a>一、安装nginx的依赖库</h4><p> 1.安装prce(重定向支持)和openssl(https支持，如果不需要https可以不安装。)<br> 推荐使用yum装方便，也可以下载tar编译安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install pcre*</span><br><span class="line">yum -y install openssl*</span><br></pre></td></tr></table></figure><p> 2.安装ngx_cache_purge</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O /usr/src/ngx_cache_purge-2.3.tar.gz  http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz</span><br></pre></td></tr></table></figure><p> 下载后，解压放到/usr/local/src/目录即可，无需编译安装</p><h4 id="二、下载并安装nginx"><a href="#二、下载并安装nginx" class="headerlink" title="二、下载并安装nginx"></a><a href></a>二、下载并安装nginx</h4><p> 1.下载nginx包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.9.9.tar.gz</span><br></pre></td></tr></table></figure><p> 2.解压并且安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.9.9.tar.gz</span><br></pre></td></tr></table></figure><p> 3.进入到nginx目录编译安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.9.9</span><br><span class="line">./configure --prefix=/usr/local/nginx --add-module=/usr/local/src/ngx_cache_purge-2.3 --with-http_stub_status_module --with-stream</span><br><span class="line">make &amp;&amp; make install;</span><br></pre></td></tr></table></figure><blockquote><p>其中 /usr/local/src/ngx_cache_purge-2.3 是下载 ngx_cache_purge-2.3 解压后的目录</p><p> 4.修改nginx的配置文件nginx.conf<br> 内容如下</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  32; </span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    #use epoll;          </span><br><span class="line">    worker_connections  65535;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stream &#123;</span><br><span class="line">    upstream zifangsky &#123;</span><br><span class="line">        hash $remote_addr consistent;</span><br><span class="line">        server 192.168.4.137:8360;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        proxy_connect_timeout 5s;</span><br><span class="line">        proxy_timeout 5s;</span><br><span class="line">        proxy_pass zifangsky;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       9000;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="三、相关命令"><a href="#三、相关命令" class="headerlink" title="三、相关命令"></a><a href></a>三、相关命令</h4><p> 1.查看是否监听端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -apn | grep 8080:</span><br></pre></td></tr></table></figure><p> 2.查看nginx的进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><p> 3.查看nginx的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br></pre></td></tr></table></figure><p> 4.记得关闭防火墙或者开启相关端口<br> 查看防火墙的状态<br> 关闭防护墙<br> 开机关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><p> 5.杀掉占用80端口的进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fuser -k 80/tcp</span><br><span class="line">如果没有fuser命令，则用yum安装</span><br><span class="line">yum install -y psmisc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tcp </tag>
            
            <tag> 端口转发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WordPress非常实用的15个配置技巧</title>
      <link href="/2019/08/02/00013/"/>
      <url>/2019/08/02/00013/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>  WP-config是WordPress网站上最强大的文件之一，它在WordPress中发挥着重要作用。这里分享一些比较有用的WordPress配置技巧，这些技巧可以对WordPress站点进行故障排除，优化和保护。</p><p><img alt data-src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=3489832583,3160552602&amp;fm=173&amp;app=25&amp;f=JPEG?w=550&amp;h=340&amp;s=B59AAF7E175675CA1ECDAD6A0300707A" class="lozad">  </p><h2 id="如何使用这些WordPress配置技巧？"><a href="#如何使用这些WordPress配置技巧？" class="headerlink" title="如何使用这些WordPress配置技巧？"></a>如何使用这些WordPress配置技巧？</h2><p>WordPress附带了一个名为wp-config.php的强大配置文件。它位于每个WordPress站点的根文件夹中，并包含重要的配置设置。通常我们习惯一键搭建WordPress网站，不需要编辑wp-config.php文件，所以我们很容易忽视此文件的功能。我们在对此文件进行编辑时之前，最好创建完整备份，以防止错误操作导致网站错误。下面分享一些方便实用的WordPress配置技巧。</p><h2 id="1、WordPress基本配置"><a href="#1、WordPress基本配置" class="headerlink" title="1、WordPress基本配置"></a>1、WordPress基本配置</h2><p>默认情况下，您只需在WordPress安装期间填写数据库设置。如果没有wp-config.php文件，则会要求通过填写数据库信息来创建一个文件，如果失败，则需要手动添加。只需要将wp-config-sample.php文件重命名为wp-config.php，然后通过FTP连接并上传到网站。</p><p><img alt data-src="https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=2529385825,1067994896&amp;fm=173&amp;app=25&amp;f=JPEG?w=520&amp;h=359&amp;s=5820347211CA7149525C11CA0000E0B2" class="lozad"><br>之后，您可以继续编辑新创建的wp-config.php文件。您需要通过更改以下代码来添加数据库信息：</p><p>define(‘DB_NAME’, ‘database-name’);</p><p>define(‘DB_USER’, ‘database-username’);</p><p>define(‘DB_PASSWORD’, ‘database-password’);</p><p>define(‘DB_HOST’, ‘localhost’);</p><p>不要忘记保存更改并将文件上传回服务器。</p><h2 id="2、在WordPress中添加安全密钥"><a href="#2、在WordPress中添加安全密钥" class="headerlink" title="2、在WordPress中添加安全密钥"></a>2、在WordPress中添加安全密钥</h2><p>默认的WordPress安装会自动将安全密钥添加到配置文件中。这些安全密钥用于为WordPress登录和cookie身份验证添加额外的安全层。如果您觉得有人在没有正确身份验证的情况下访问您的网站，您可以随时重新生成安全密钥 更改安全密钥将注销所有登录用户。</p><p>define( ‘AUTH_KEY’, ‘put your unique phrase here’ );</p><p>define( ‘SECURE_AUTH_KEY’, ‘put your unique phrase here’ );</p><p>define( ‘LOGGED_IN_KEY’, ‘put your unique phrase here’ );</p><p>define( ‘NONCE_KEY’, ‘put your unique phrase here’ );</p><p>define( ‘AUTH_SALT’, ‘put your unique phrase here’ );</p><p>define( ‘SECURE_AUTH_SALT’, ‘put your unique phrase here’ );</p><p>define( ‘LOGGED_IN_SALT’, ‘put your unique phrase here’ );</p><p>define( ‘NONCE_SALT’, ‘put your unique phrase here’ );</p><h2 id="3、更改WordPress表前缀"><a href="#3、更改WordPress表前缀" class="headerlink" title="3、更改WordPress表前缀"></a>3、更改WordPress表前缀</h2><p>典型的默认WordPress安装会为所有WordPress数据库表名添加wp_前缀。一些WordPress安全专家认为，更改表前缀可以使您的WordPress数据库更安全。要做到这一点，您需要更改WordPress配置中的以下行。</p><p>$table_prefix = ‘wp_’;</p><p>如果您对现有网站执行此操作，则还需要更改WordPress数据库中的表前缀。</p><h2 id="4、打开WordPress调试"><a href="#4、打开WordPress调试" class="headerlink" title="4、打开WordPress调试"></a>4、打开WordPress调试</h2><p>WordPress带有一个简洁的调试功能，允许您在调试模式下查看或隐藏WordPress错误。要启用此功能，您需要在WordPress配置文件中添加此规则。</p><p>define( ‘WP_DEBUG’, true );</p><p>您还可以在隐藏网站上的错误的同时打开调试，并将其保存在日志文件中。为此，请将以下行添加到配置设置中。</p><p>define( ‘WP_DEBUG’, true );</p><p>define( ‘WP_DEBUG_LOG’, true );</p><p>define( ‘WP_DEBUG_DISPLAY’, false );</p><p>这将在您网站的wp-content文件夹中创建一个debug.log文件，并将所有调试错误和通知存储在日志文件中。</p><h2 id="5、更改站点或WordPress地址"><a href="#5、更改站点或WordPress地址" class="headerlink" title="5、更改站点或WordPress地址"></a>5、更改站点或WordPress地址</h2><p>设置 常规 页面设置 WordPress和站点URL 。但是，如果您无法访问WordPress网站，查看重定向错误或刚刚移动了您的网站，则可能无法执行此操作。在这种情况下，您可以通过添加以下行来通过wp-config.php文件更改您的站点和WordPress URL：</p><p>define(‘WP_HOME’, ‘<a href="http://www.example.com&#39;" target="_blank" rel="noopener">http://www.example.com&#39;</a>);</p><p>define(‘WP_SITEURL’, ‘<a href="http://www.example.com&#39;" target="_blank" rel="noopener">http://www.example.com&#39;</a>);</p><p>不要忘记用您自己的域名替换example.com。</p><h2 id="6、覆盖文件权限"><a href="#6、覆盖文件权限" class="headerlink" title="6、覆盖文件权限"></a>6、覆盖文件权限</h2><p>如果主机对所有用户文件具有限制权限，而WordPress允许覆盖文件权限。通常大多数用户不需要这个功能，但是如果你有这样的需求，可以设置一下。</p><p>define(‘FS_CHMOD_FILE’, 0644);</p><p>define(‘FS_CHMOD_DIR’, 0755);</p><h2 id="7、更改文章修订版本设置"><a href="#7、更改文章修订版本设置" class="headerlink" title="7、更改文章修订版本设置"></a>7、更改文章修订版本设置</h2><p>WordPress拥有非常强大的文章修订功能，可以通过还原旧版本或自动保存来撤消对文章和页面的更改。通过配置文件禁用或更改发布修订设置，可以使用以下不同的修订设置。</p><p>设置自动保存的修订频率，可以通过添加以下代码来更改：</p><p>define(‘AUTOSAVE_INTERVAL’, 120); // in seconds</p><p>限制每个帖子的修订数量：</p><p>define(‘WP_POST_REVISIONS’, 10);</p><p>完全禁用后修订功能，使用以下代码可以禁用发布修订：</p><p>define( ‘WP_POST_REVISIONS’, false );</p><h2 id="8、更改WordPress回收站保存时间"><a href="#8、更改WordPress回收站保存时间" class="headerlink" title="8、更改WordPress回收站保存时间"></a>8、更改WordPress回收站保存时间</h2><p>WordPress带有一个名为Trash的回收站功能，当用户将文章移动到垃圾箱时，会自动保存在网站上30天。之后，WordPress会自动删除。</p><p>修改文章保留垃圾箱的天数：</p><p>define( ‘EMPTY_TRASH_DAYS’, 15 ); // 保存为15天</p><p>禁用文章自动保存到回收站：</p><p>define(‘EMPTY_TRASH_DAYS’, 0 );</p><p>注意：使用 0 表示帖子将被永久删除，单击“永久删除”时，WordPress不会再提示确认删除。</p><h2 id="9、对WordPress配置添加FTP-SSH常量"><a href="#9、对WordPress配置添加FTP-SSH常量" class="headerlink" title="9、对WordPress配置添加FTP / SSH常量"></a>9、对WordPress配置添加FTP / SSH常量</h2><p>默认情况下，WordPress允许从仪表板升级WordPress核心，主题和插件。每次升级或安装新插件时，都有一些主机需要FTP或SSH连接。</p><p>通过下面代码，可以设置FTP或SSH常量：</p><p>// 强制文件系统方法：direct、ssh、ftpext 、ftpsockets</p><p>define(‘FS_METHOD’, ‘ftpext’);</p><p>// 根安装目录的绝对路径</p><p>define(‘FTP_BASE’, ‘/path/to/wordpress/‘);</p><p>// wp-content目录的绝对路径</p><p>define(‘FTP_CONTENT_DIR’, ‘/path/to/wordpress/wp-content/‘);</p><p>// wp-plugins目录的绝对路径</p><p>define(‘FTP_PLUGIN_DIR ‘, ‘/path/to/wordpress/wp-content/plugins/‘);</p><p>// SSH公钥的绝对路径</p><p>define(‘FTP_PUBKEY’, ‘/home/username/.ssh/id_rsa.pub’);</p><p>// SSH私钥的绝对路径</p><p>define(‘FTP_PRIVKEY’, ‘/home/username/.ssh/id_rsa’);</p><p>// FTP或SSH用户名</p><p>define(‘FTP_USER’, ‘username’);</p><p>// password for FTP_USER username</p><p>define(‘FTP_PASS’, ‘password’);</p><p>// 主机名称：您的SSH/FTP服务器的端口组合</p><p>define(‘FTP_HOST’, ‘ftp.example.org:21’);</p><p>注意：不要忘记将WordPress路径和ftp.example.com替换为您自己的FTP主机信息。</p><h2 id="10、允许数据库自动修复"><a href="#10、允许数据库自动修复" class="headerlink" title="10、允许数据库自动修复"></a>10、允许数据库自动修复</h2><p>WordPress内置自动优化和修复数据库功能，但是，默认情况下此功能处于关闭状态。要启用此功能，需要将以下代码添加到WordPress配置文件中。</p><p>define(‘WP_ALLOW_REPAIR’, true);</p><p>添加后，访问以下URL以优化和修复WordPress数据库</p><p><a href="http://example.com/wp-admin/maint/repair.php" target="_blank" rel="noopener">http://example.com/wp-admin/maint/repair.php</a></p><p><img alt data-src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=542521568,746573423&amp;fm=173&amp;app=25&amp;f=JPEG?w=520&amp;h=287&amp;s=5CA834731B0A514910DC81DB000050B0" class="lozad"><br>不要忘记替换成自己的域名example.com。看到一个简单的页面，其中包含修复或修复和优化数据库的选项，无需登录即可访问此页面。</p><h2 id="11、增加PHP内存限制"><a href="#11、增加PHP内存限制" class="headerlink" title="11、增加PHP内存限制"></a>11、增加PHP内存限制</h2><p>一些常见的WordPress错误是由PHP内存耗尽引起的，可以通过wp-config.php文件增加PHP内存限制。只需粘贴以下代码：</p><p>define(‘WP_MEMORY_LIMIT’, ‘128M’);</p><h2 id="12、移动wp-content目录"><a href="#12、移动wp-content目录" class="headerlink" title="12、移动wp-content目录"></a>12、移动wp-content目录</h2><p>WordPress允许移动wp-content目录，老司机认为它可以增强WordPress安全性。将以下代码添加到wp-config.php文件中：</p><p>define( ‘WP_CONTENT_DIR’, $_SERVER[‘DOCUMENT_ROOT’] . ‘/blog/wp-content’ );</p><p>define( ‘WP_CONTENT_URL’, ‘<a href="http://example/blog/wp-content&#39;" target="_blank" rel="noopener">http://example/blog/wp-content&#39;</a>);</p><p>define( ‘WP_PLUGIN_DIR’, $_SERVER[‘DOCUMENT_ROOT’] . ‘/blog/wp-content/plugins’ );</p><p>define( ‘WP_PLUGIN_URL’, ‘<a href="http://example/blog/wp-content/plugins&#39;" target="_blank" rel="noopener">http://example/blog/wp-content/plugins&#39;</a>);</p><h2 id="13、使用自定义用户表"><a href="#13、使用自定义用户表" class="headerlink" title="13、使用自定义用户表"></a>13、使用自定义用户表</h2><p>默认情况下，WordPress会将所有用户数据保存在表wp_users和wp_usermeta中。通过下面的代码可以指定要存储用户信息的表。</p><p>define(‘CUSTOM_USER_TABLE’, $table_prefix.’my_users’);</p><p>define(‘CUSTOM_USER_META_TABLE’, $table_prefix.’my_usermeta’);</p><h2 id="14、启用多站点"><a href="#14、启用多站点" class="headerlink" title="14、启用多站点"></a>14、启用多站点</h2><p>WordPress站点带有内置的多站点功能，允许使用相同的配置创建多个WordPress站点。将下面代码添加到配置文件，可以启用多站点功能：</p><p>define(‘WP_ALLOW_MULTISITE’, true);</p><h2 id="15、隐藏WordPress配置文件"><a href="#15、隐藏WordPress配置文件" class="headerlink" title="15、隐藏WordPress配置文件"></a>15、隐藏WordPress配置文件</h2><p>默认情况下，wp-config.php文件位于根目录，但它可以移动到public_html目录之外，因此用户无法访问它。如果在WordPress根文件夹中找不到这个文件，WordPress默认会查看其他目录。我们还可以将以下代码添加到 .htaccess文件中，来限制对此文件的访问。</p><p>#Protect wp-config.php</p><files wp-config.php><p>order allow,deny</p><p>deny from all</p></files>]]></content>
      
      
      <categories>
          
          <category> WordPress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7搭建企业级Zabbix监控(yum安装)</title>
      <link href="/2019/07/26/00032/"/>
      <url>/2019/07/26/00032/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Centos7安装部署zabbix3-4"><a href="#Centos7安装部署zabbix3-4" class="headerlink" title="Centos7安装部署zabbix3.4"></a>Centos7安装部署zabbix3.4</h3><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><h4 id="查看centos系统版本："><a href="#查看centos系统版本：" class="headerlink" title="查看centos系统版本："></a>查看centos系统版本：</h4><p> <img alt data-src="https://img-blog.csdnimg.cn/20190905100012984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h4 id="安装前需要先关闭selinux和firewall"><a href="#安装前需要先关闭selinux和firewall" class="headerlink" title="安装前需要先关闭selinux和firewall."></a>安装前需要先关闭selinux和firewall.</h4><p> 关闭selinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# vi /etc/selinux/config</span><br><span class="line">将SELINUX=enforcing改为SELINUX=disabled</span><br><span class="line">设置后需要重启才能生效</span><br><span class="line"> </span><br><span class="line">[root@zabbix ~]# setenforce 0       #临时关闭</span><br><span class="line"> </span><br><span class="line">[root@zabbix ~]# getenforce         #检测selinux是否关闭，Disabled 为关闭</span><br></pre></td></tr></table></figure><p> <img alt data-src="https://img-blog.csdnimg.cn/20190726145231530.png" class="lozad"><br> 关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# firewall-cmd --state    #查看默认防火墙状态</span><br><span class="line">not running           #关闭后显示not running，开启后显示running</span><br><span class="line"> </span><br><span class="line">[root@zabbix ~]# systemctl stop firewalld.service    #临时关闭firewall</span><br><span class="line"> </span><br><span class="line">[root@zabbix ~]# systemctl disable firewalld.service       #禁止firewall开机启动</span><br></pre></td></tr></table></figure><h3 id="配置zabbix-程序安装"><a href="#配置zabbix-程序安装" class="headerlink" title="配置zabbix 程序安装"></a>配置zabbix 程序安装</h3><h4 id="配置zabbix-的yum源"><a href="#配置zabbix-的yum源" class="headerlink" title="配置zabbix 的yum源"></a>配置zabbix 的yum源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# rpm -ivh http://repo.zabbix.com/zabbix/3.4/rhel/7/x86_64/zabbix-release-3.4-2.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p> 这里如果想安装别的版本，访问zabbix的官网，下载自己想要的版本，然后替换为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.zabbix.com/download</span><br></pre></td></tr></table></figure><p> <img alt data-src="https://img-blog.csdnimg.cn/20190823191000104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> <img alt data-src="https://img-blog.csdnimg.cn/20190905100056973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h4 id="安装zabbix程序包，安装mysql、zabbix-agent等相关应用"><a href="#安装zabbix程序包，安装mysql、zabbix-agent等相关应用" class="headerlink" title="安装zabbix程序包，安装mysql、zabbix-agent等相关应用"></a>安装zabbix程序包，安装mysql、zabbix-agent等相关应用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# yum install -y zabbix-server-mysql zabbix-web-mysql zabbix-agent mariadb-server</span><br></pre></td></tr></table></figure><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190822183629248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h4 id="启动mariadb-数据库-并设置开机启动，创建数据库实例，授权"><a href="#启动mariadb-数据库-并设置开机启动，创建数据库实例，授权" class="headerlink" title="启动mariadb(数据库)并设置开机启动，创建数据库实例，授权"></a>启动mariadb(数据库)并设置开机启动，创建数据库实例，授权</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# systemctl start mariadb         #启动mariadb</span><br><span class="line"> </span><br><span class="line">[root@zabbix ~]# systemctl enable mariadb        #开机时启动mariadb</span><br><span class="line"> </span><br><span class="line">[root@zabbix ~]# mysql                         #登入数据库</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; create database zabbix character set utf8 collate utf8_bin;  </span><br><span class="line">#创建数据库实例</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on zabbix.* to zabbix@&apos;%&apos; identified by &apos;zabbix&apos;;  </span><br><span class="line">#授权所有主机访问数据库实例zabbix，用户名/密码：zabbix/zabbix</span><br><span class="line"> </span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost identified by &apos;zabbix&apos;;   </span><br><span class="line">#授权localhost主机名访问数据库实例zabbix，用户名/密码：zabbix/zabbix</span><br><span class="line"> </span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost.localdomain identified by &apos;zabbix&apos;;  </span><br><span class="line">#授权localhost.localdomain主机访问数据库实例zabbix，用户名/密码：zabbix/zabbix</span><br><span class="line"> </span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p> <img alt data-src="https://img-blog.csdnimg.cn/20190822183839845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h4 id="导入初始模式和数据"><a href="#导入初始模式和数据" class="headerlink" title="导入初始模式和数据"></a>导入初始模式和数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# cd /usr/share/doc/zabbix-server-mysql-3.4.5/  #进入create.sql.gz所在目录</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">[root@zabbix zabbix-server-mysql-3.4.5]# zcat create.sql.gz |mysql -uroot zabbix  #导入出事模式</span><br></pre></td></tr></table></figure><p> 注：这里的数据库没有设置密码的</p><h3 id="zabbix-server相关操作"><a href="#zabbix-server相关操作" class="headerlink" title="zabbix-server相关操作"></a>zabbix-server相关操作</h3><h4 id="配置zabbix-server-r-配置文件zabbix-server-conf"><a href="#配置zabbix-server-r-配置文件zabbix-server-conf" class="headerlink" title="配置zabbix-server r 配置文件zabbix-server.conf"></a>配置zabbix-server r 配置文件zabbix-server.conf</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix zabbix-server-mysql-3.4.5]# vi /etc/zabbix/zabbix_server.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DBHost=localhost          # 数据主机名</span><br><span class="line">DBName=zabbix            # 数据库实例</span><br><span class="line">DBUser=zabbix              # 用户名</span><br><span class="line">DBPassword=zabbix      # 密码</span><br></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p> <img alt data-src="https://img-blog.csdnimg.cn/20190822184423552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 这里我们在重启下mariadb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb</span><br></pre></td></tr></table></figure><h4 id="启动zabbix-server服务"><a href="#启动zabbix-server服务" class="headerlink" title="启动zabbix-server服务"></a>启动zabbix-server服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# systemctl start zabbix-server   #启动zabbix-server服务</span><br><span class="line"> </span><br><span class="line">[root@zabbix ~]# systemctl enable zabbix-server   #开机启动zabbix-server服务。</span><br></pre></td></tr></table></figure><p> <img alt data-src="https://img-blog.csdnimg.cn/20190822184512638.png" class="lozad"></p><h4 id="编辑Apache的配置文件，消注释设置正确的时区"><a href="#编辑Apache的配置文件，消注释设置正确的时区" class="headerlink" title="编辑Apache的配置文件，消注释设置正确的时区"></a>编辑Apache的配置文件，消注释设置正确的时区</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# vi /etc/httpd/conf.d/zabbix.conf</span><br><span class="line">php_value max_execution_time 300</span><br><span class="line">php_value memory_limit 128M</span><br><span class="line">php_value post_max_size 16M</span><br><span class="line">php_value upload_max_filesize 2M</span><br><span class="line">php_value max_input_time 300</span><br><span class="line">php_value always_populate_raw_post_data -1</span><br><span class="line">php_value date.timezone Asia/Shanghai</span><br></pre></td></tr></table></figure><p> 修改配置文件</p><h4 id="启动httpd服务，设置开机启动httpd服务"><a href="#启动httpd服务，设置开机启动httpd服务" class="headerlink" title="启动httpd服务，设置开机启动httpd服务"></a>启动httpd服务，设置开机启动httpd服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# systemctl start httpd     #启动httpd服务</span><br><span class="line"> </span><br><span class="line">[root@zabbix ~]# systemctl enable httpd    #设置开机启动httpd服务</span><br></pre></td></tr></table></figure><p> <img alt data-src="https://img-blog.csdnimg.cn/20190822184750412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h4 id="启动zabbix-agent并设置开机自启动"><a href="#启动zabbix-agent并设置开机自启动" class="headerlink" title="启动zabbix-agent并设置开机自启动"></a>启动zabbix-agent并设置开机自启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix ~]# systemctl start zabbix-agent  #启动zabbix-agent服务</span><br><span class="line"> </span><br><span class="line">[root@zabbix ~]# systemctl enable zabbix-agent   #设置zabbix-agent服务开机自动启动</span><br></pre></td></tr></table></figure><h3 id="zabbix-web-网页安装"><a href="#zabbix-web-网页安装" class="headerlink" title="zabbix web 网页安装"></a>zabbix web 网页安装</h3><h4 id="在浏览器输入地址http-服务器ip-zabbix-setup-php，出现欢迎界面，点击下一步；"><a href="#在浏览器输入地址http-服务器ip-zabbix-setup-php，出现欢迎界面，点击下一步；" class="headerlink" title="在浏览器输入地址http://服务器ip/zabbix/setup.php，出现欢迎界面，点击下一步；"></a>在浏览器输入地址http://服务器ip/zabbix/setup.php，出现欢迎界面，点击下一步；</h4><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190822185055101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h4 id="出现必要条件检测界面，正常都是OK，点击下一步"><a href="#出现必要条件检测界面，正常都是OK，点击下一步" class="headerlink" title="出现必要条件检测界面，正常都是OK，点击下一步"></a>出现必要条件检测界面，正常都是OK，点击下一步</h4><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/2019082218512429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h4 id="配置DB连接，与zabbix-server-conf文件中主机、数据库名称、用户名、密码保持一致，点击下一步"><a href="#配置DB连接，与zabbix-server-conf文件中主机、数据库名称、用户名、密码保持一致，点击下一步" class="headerlink" title="配置DB连接，与zabbix_server.conf文件中主机、数据库名称、用户名、密码保持一致，点击下一步"></a>配置DB连接，与zabbix_server.conf文件中主机、数据库名称、用户名、密码保持一致，点击下一步</h4><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190822185247407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 这里如果报Error connecting to database: Access denied for user ‘zabbix’@‘localhost’ (using password: YES)<br> 我们可以将数据库的那一段在执行一下，我装了两次都是这样的<br> 或者参考下面的文章<br> <a href="https://blog.csdn.net/qq_34355232/article/details/90240069" target="_blank" rel="noopener">https://blog.csdn.net/qq_34355232/article/details/90240069</a>  </p><h4 id="zabbix服务器详细信息，点击下一步"><a href="#zabbix服务器详细信息，点击下一步" class="headerlink" title="zabbix服务器详细信息，点击下一步"></a>zabbix服务器详细信息，点击下一步</h4><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190822204518683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad">  </p><h4 id="安装前汇总，检查信息无误，点击下一步安装"><a href="#安装前汇总，检查信息无误，点击下一步安装" class="headerlink" title="安装前汇总，检查信息无误，点击下一步安装"></a>安装前汇总，检查信息无误，点击下一步安装</h4><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190822204543472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad">  </p><h4 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h4><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190822204631890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h3 id="zabbix网页登录"><a href="#zabbix网页登录" class="headerlink" title="zabbix网页登录"></a>zabbix网页登录</h3><h4 id="在浏览器输入http-zabbix服务器ip-zabbix-index-php，输入管理员用户名Admin-区分大小写-，默认密码zabbix，点击登入即可。"><a href="#在浏览器输入http-zabbix服务器ip-zabbix-index-php，输入管理员用户名Admin-区分大小写-，默认密码zabbix，点击登入即可。" class="headerlink" title="在浏览器输入http://zabbix服务器ip/zabbix/index.php，输入管理员用户名Admin(区分大小写)，默认密码zabbix，点击登入即可。"></a>在浏览器输入<a href="http://zabbix服务器ip/zabbix/index.php，输入管理员用户名Admin(区分大小写)，默认密码zabbix，点击登入即可。" target="_blank" rel="noopener">http://zabbix服务器ip/zabbix/index.php，输入管理员用户名Admin(区分大小写)，默认密码zabbix，点击登入即可。</a></h4><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190822204719448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h4 id="设置zabbix-中文"><a href="#设置zabbix-中文" class="headerlink" title="设置zabbix 中文"></a>设置zabbix 中文</h4><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190822204808920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><h4 id="解决中文在图形界面上的乱码"><a href="#解决中文在图形界面上的乱码" class="headerlink" title="解决中文在图形界面上的乱码"></a>解决中文在图形界面上的乱码</h4><p> 一般情况下还是会出现中文乱码的情况<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190823204523332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><p> 因为zabbix自身对中文简体的支持不完善，需要我们手动的去上传新的字体进行替换：<br> 在C:\Windows\Fonts中复制想要的字体，后缀为ttf，把文件复制到桌面。<br> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190822205547875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"><br> 上传至zabbix服务器的/usr/share/zabbix/fonts 目录中，把文件上传在linux系统中我们可以使用winSCP 这个软件。在这里我直接使用 rz -y 这个命令上传。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix fonts]# yum install lrzsz -y   #安装命令</span><br><span class="line"> </span><br><span class="line">[root@zabbix fonts]# rz -y</span><br></pre></td></tr></table></figure><p> <img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190822205811238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpdXhpYW5neWFuZ18=,size_16,color_FFFFFF,t_70" class="lozad"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix fonts]# mv graphfont.ttf  graphfont.ttf.bak   #把graphfont.ttf备份</span><br><span class="line">[root@zabbix fonts]# mv simkai.ttf graphfont.ttf           #把simkai.ttf 改名为graphfont.ttf</span><br><span class="line">然后刷新下网页就可以了。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>80端口和8080端口的区别以及详情</title>
      <link href="/2019/07/25/00030/"/>
      <url>/2019/07/25/00030/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p>80端口和8080端口没有本质区别，80端口和8080端口经常用于Web应用程序，只是数字的区别而已，没有本质的区别。IIS，微软的internet信息服务器，提供web服务，默认使用80端口 。apache，一个开源的web服务器，提供web服务，默认使用8080端口。</p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><blockquote><p>一般80作为网页服务器的访问端口，比如一个网站的ip地址是123.123.123.123，我们访问的是123.123.123.123:80 只是80是默认端口可以省略。但是如果一个服务器上有不同的站点，那可以用另外的端口，比如123.123.123.123:8080 来访问，选择8080是因为两个80好记。</p></blockquote><blockquote><p>80是http协议的默认端口，是在输入网站的时候其实浏览器（非IE）已经帮你输入协议了，所以你输入  <a href="http://www.baidu.com/" target="_blank" rel="noopener">http://www.baidu.com/</a> 其实是访问 <a href="http://www.baidu.com/" target="_blank" rel="noopener">http://www.baidu.com/</a> 而8080，一般用与webcahe，完全不一样的两个，比如linux服务器里apache默认跑80端口，而apache-tomcat默认跑8080端口，其实端口没有实际意义只是一个接口，主要是看服务的监听端口。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 端口 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
